{"version":3,"sources":["styles/themeStyles.js","styles/AppStyles.js","components/AppInside.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","palette","primary","main","secondary","error","orange","text","background","default","paper","custom","myOwnComponent","margin","backgroundColor","typography","fontFamily","join","useStyles","makeStyles","mainWrapper","title","color","paddingTop","textAlign","subtitle","textIndent","width","AppInside","appClasses","className","Routes","lazy","App","ThemeProvider","style","height","fallback","LinearProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iHAAA,oBAGMA,EAAQC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAMG,IAAO,MAEfC,KAAM,CACJL,QAAS,UACTE,UAAW,WAEbI,WAAY,CACVC,QAAS,UACTC,MAAO,YAGXC,OAAQ,CACNC,eAAgB,CACdC,OAAQ,YACRC,gBAAiB,cAEnBC,WAAY,CAEVC,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,SAKElB,O,yHCnBAmB,EAnBGC,aAAW,SAACpB,GAAD,MAAY,CACvCqB,YAAa,CACXZ,WAAYT,EAAME,QAAQO,WAAWC,SAEvCY,MAAO,CACLC,MAAOvB,EAAME,QAAQM,KAAKL,QAC1BW,OAAQ,SACRU,WAAY,QACZC,UAAW,UAEbC,SAAU,CACRH,MAAOvB,EAAME,QAAQM,KAAKH,UAC1BS,OAAQ,WACRW,UAAW,UACXE,WAAY,MACZC,MAAO,W,OCLIC,EAfG,WAChB,IAAMC,EAAaX,IACnB,OAAQ,qCACN,mCACE,oBAAIY,UAAYD,EAAWR,MAA3B,4BAEA,mBAAGS,UAAYD,EAAWJ,SAA1B,oIAEF,mBAAGK,UAAYD,EAAWJ,SAA1B,mUAEA,2B,QCREM,EAASC,gBAAK,kBAAM,uDAqBXC,EAnBH,WACV,OACE,cAACC,EAAA,EAAD,CAAenC,MAAQA,IAAvB,SACE,sBAAKoC,MACH,CACE3B,WAAYT,IAAME,QAAQO,WAAWC,QACrC2B,OAAQ,OACRT,MAAO,QAJX,UAOE,cAAC,EAAD,IACA,cAAC,WAAD,CAAUU,SAAW,cAACC,EAAA,EAAD,IAArB,SACE,cAACP,EAAD,YCPKQ,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2ca4eda9.chunk.js","sourcesContent":["import { orange } from '@material-ui/core/colors';\nimport { createTheme } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#f3d2c1'\n    },\n    secondary: {\n      main: '#8bd3dd'\n    },\n    error: {\n      main: orange[500]\n    },\n    text: {\n      primary: '#001858',\n      secondary: '#172c66',\n    },\n    background: {\n      default: '#f3d2c1',\n      paper: '#fef6e4'\n    },\n  },\n  custom: {\n    myOwnComponent: {\n      margin: \"10px 10px\",\n      backgroundColor: \"lightgreen\"\n    },\n    typography: {\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n    },\n  }\n});\n\nexport default theme;","import { makeStyles } from '@material-ui/core';\n// {\n//   xs: 0,\n//   sm: 600,\n//   md: 900,\n//   lg: 1200,\n//   xl: 1536,\n// },\nconst useStyles = makeStyles((theme) => ({\n  mainWrapper: {\n    background: theme.palette.background.default\n  },\n  title: {\n    color: theme.palette.text.primary,\n    margin: '0 auto',\n    paddingTop: '0.5em',\n    textAlign: 'center'\n  },\n  subtitle: {\n    color: theme.palette.text.secondary,\n    margin: '1em auto',\n    textAlign: 'justify',\n    textIndent: '2em',\n    width: '50%'\n  }\n}));\n\nexport default useStyles;","\nimport useStyles from '../styles/AppStyles';\n\nconst AppInside = () => {\n  const appClasses = useStyles();\n  return (<>\n    <header>\n      <h1 className={ appClasses.title }>LOJA DE TINTAS\n      </h1>\n      <p className={ appClasses.subtitle }>Uma aplicação web que ajude o usuário a calcular a quantidade de tinta necessária para pintar uma sala.</p>\n    </header>\n    <p className={ appClasses.subtitle }>Essa aplicação deve considerar que a sala é composta de 4 paredes e deve permitir que o usuário escolha qual a medida de cada parede e quantas janelas e portas possuem cada parede.\n      Com base na quantidade necessária o sistema deve apontar tamanhos de lata de tinta que o usuário deve comprar.</p>\n    <hr />\n  </>\n  );\n};\n\nexport default AppInside;","import { LinearProgress, ThemeProvider } from '@material-ui/core';\nimport { lazy, Suspense } from 'react';\nimport AppInside from './components/AppInside';\n// import Routes from './Routes/Routes';\nimport theme from './styles/themeStyles';\nconst Routes = lazy(() => import('./Routes/Routes'));\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={ theme }>\n      <div style={\n        {\n          background: theme.palette.background.default,\n          height: '100%',\n          width: '100%'\n        }\n      }>\n        <AppInside />\n        <Suspense fallback={ <LinearProgress /> }>\n          <Routes />\n        </Suspense>\n      </div>\n    </ThemeProvider >\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}