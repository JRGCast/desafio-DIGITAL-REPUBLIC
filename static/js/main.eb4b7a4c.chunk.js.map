{"version":3,"sources":["styles/WallsInputStyles.js","components/ImgGenerator.js","components/WallsInputsGenerator.js","components/WallsCalc.js","pages/LandingPage.js","Routes/Routes.js","styles/themeStyles.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","mainWrapper","alignItems","background","palette","primary","light","border","display","flexFlow","gap","gridTemplateColumns","justifyContent","margin","padding","width","allContentWrapper","paper","color","text","cardWrapper","alignContent","inputMeasures","marginLeft","imageWrapper","ImgGenerator","imgObj","src","alt","textInfo","classes","className","style","WallsInputGenerator","wallCardsAmount","wallMeasures","handleFuncObjs","minWallMeasures","maxWallMeasures","handleWallChange","handleWindowChange","inputPropsWalls","inputProps","min","max","step","inputPropsWnD","theInputs","Array","fill","map","_amount","index","InputLabel","htmlFor","TextField","id","type","placeholder","InputProps","autoFocus","onChange","required","WallsCalc","quantityOfWalls","heightStr","lengthStr","useState","wallsAreas","setWallsAreas","target","value","spanEl","document","getElementById","split","wall","number","currWindowId","join","currWindowInput","Number","innerText","backgroundColor","disabled","LandingPage","giantString","item","textAlign","Routes","exact","path","component","createTheme","main","secondary","error","orange","default","custom","myOwnComponent","typography","fontFamily","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.eb4b7a4c.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  mainWrapper: {\n    alignItems: 'center',\n    background: theme.palette.primary.light,\n    border: `5px solid #001858`,\n    display: 'grid',\n    flexFlow: 'row wrap',\n    gap: '1em',\n    gridTemplateColumns: '1fr 1fr',\n    justifyContent: 'center space-between',\n    margin: '0 auto',\n    padding: '1em',\n    width: '50%',\n  },\n  allContentWrapper: {\n    background: theme.palette.background.paper,\n    border: '3px solid #001858',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'space-between',\n    margin: '0 auto',\n    padding: '0.5em',\n    width: '90%',\n  },\n  cardWrapper: {\n    alignItems: 'center',\n    alignContent: 'center',\n    border: '1px solid #001858',\n    padding: '0.3em',\n    margin: '0.5em auto',\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'center',\n  },\n  inputMeasures: {\n    marginLeft: '0.2em',\n    width: '4em'\n  },\n  imageWrapper: {\n    alignContent: 'center',\n    alignItems: 'center',\n    background: theme.palette.background.paper,\n    border: '3px solid #001858',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'center',\n    margin: '0 auto',\n    padding: '0.5em',\n    width: '90%',\n  },\n}));\n\nexport default useStyles;","import useStyles from '../styles/WallsInputStyles';\nconst ImgGenerator = ({ imgObj }) => {\n  const { src, alt, textInfo } = imgObj;\n  const classes = useStyles();\n  return (\n    <>\n      <div className={ classes.imageWrapper }>\n        <figure>\n          <img\n            src={ src }\n            alt={ alt }\n            style={ {\n              background: 'white',\n              border: '2px solid grey',\n              padding: '0.5em',\n              width: '10em'\n            } } />\n        </figure>\n        <p>{ textInfo }</p>\n      </div>\n      {/*<div className={ classes.imageWrapper }>\n        <figure>\n          <img\n            src='https://mobileimages.lowes.com/productimages/b0196113-822f-4b05-ab2c-4b43b30e56ef/04744195.jpg?size=pdhi'\n            alt='porta'\n            style={ {\n              background: 'white',\n              border: '2px solid grey',\n              padding: '0.5em',\n              width: '10em'\n            } } />\n        </figure>\n        <p >Medida da Porta: 0,80m (L) x 1,90m (A)</p>\n      </div> */}\n    </>);\n};\n\nexport default ImgGenerator;","import { InputLabel, TextField } from \"@material-ui/core\";\nimport useStyles from '../styles/WallsInputStyles';\n\nconst WallsInputGenerator = ({ wallCardsAmount, wallMeasures, handleFuncObjs }) => {\n  const classes = useStyles();\n  const { minWallMeasures, maxWallMeasures } = wallMeasures;\n  const { handleWallChange, handleWindowChange } = handleFuncObjs;\n  const { allContentWrapper, cardWrapper, inputMeasures } = classes;\n  const inputPropsWalls = {\n    inputProps: {\n      min: minWallMeasures,\n      max: maxWallMeasures,\n      step: 0.01,\n    }\n  };\n  const inputPropsWnD = { inputProps: { min: 0 } };\n  const theInputs = Array(wallCardsAmount).fill('').map((_amount, index) => {\n    return (\n      <div key={ `all-content-wrapper-${index}` } className={ allContentWrapper }>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-height` }>Altura Parede { index + 1 } :</InputLabel>\n          <TextField id={ `wall-${index + 1}-height` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='1-15'\n            InputProps={ inputPropsWalls }\n            autoFocus={ true }\n            onChange={ handleWallChange }\n            required /> metros\n          <span id={ `wall-${index + 1}-height-span` }></span>\n        </div>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-length` }>Comprimento Parede { index + 1 } :</InputLabel>\n          <TextField id={ `wall-${index + 1}-length` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='1-15'\n            InputProps={ inputPropsWalls }\n            onChange={ handleWallChange }\n            required /> metros\n          <span id={ `wall-${index + 1}-length-span` }></span>\n        </div>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-window` }>Possui :</InputLabel>\n          <TextField id={ `wall-${index + 1}-window` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='Block'\n            InputProps={ inputPropsWnD }\n            onChange={ handleWindowChange }\n          /> janela(s)\n        </div>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-door` }>Possui :</InputLabel>\n          <TextField id={ `wall-${index + 1}-door` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='Block'\n            InputProps={ inputPropsWnD }\n            onChange={ handleWindowChange }\n          /> porta(s)\n        </div>\n      </div >\n    );\n  });\n  return (<>{ theInputs }</>);\n};\n\nexport default WallsInputGenerator;","import { useState } from 'react';\nimport useStyles from '../styles/WallsInputStyles';\nimport ImgGenerator from './ImgGenerator';\nimport WallsInputGenerator from './WallsInputsGenerator';\n\nconst WallsCalc = ({ quantityOfWalls, wallMeasures }) => {\n  const heightStr = 'height';\n  const lengthStr = 'length';\n  const imgWindowObj = {\n    src: 'https://amgestoroutput.s3.amazonaws.com/jcmateriais/img_produtos/638265-14535830_thumb.png',\n    alt: 'imagem-janela',\n    textInfo: 'Medida da Janela: 2,00m (L) x 1,20m (A)'\n  };\n  const imgDoorObj = {\n    src: 'https://mobileimages.lowes.com/productimages/b0196113-822f-4b05-ab2c-4b43b30e56ef/04744195.jpg?size=pdhi',\n    alt: 'imagem-porta',\n    textInfo: 'Medida da Porta: 0,80m (L) x 1,90m (A)'\n  };\n  const [wallsAreas, setWallsAreas] = useState({});\n  const handleWallChange = ({ target: { id, value } }) => {\n    const spanEl = document.getElementById(`${id}-span`);\n    const [wall, number, heightOrLength] = id.split('-');\n    const currWindowId = [wall, number, 'window'].join('-');\n    const currWindowInput = document.getElementById(currWindowId);\n    if (Number(value) >= 1 && Number(value) <= 15) {\n      setWallsAreas({ ...wallsAreas, [id]: Number(value) });\n      spanEl.innerText = '';\n      currWindowInput.style.backgroundColor = '#fef6e4';\n      currWindowInput.disabled = false;\n      currWindowInput.placeholder = '';\n    } else {\n      setWallsAreas({ ...wallsAreas, [id]: '' });\n      currWindowInput.disabled = true;\n      currWindowInput.value = '';\n      currWindowInput.placeholder = 'Block';\n      spanEl.innerText = value === '' ? 'Preencha este campo' : 'Valor incorreto ❌';\n    }\n  };\n  const handleWindowChange = ({ target: { id, value } }) => {\n    const inputWindow = document.getElementById(id);\n    const [wall, number, theWindowStr] = id.split('-');\n    const currWallHeight = [wall, number, heightStr].join('-');\n    const currWallLength = [wall, number, lengthStr].join('-');\n    // if (wallsAreas[currWallHeight]) {\n    //   inputWindow.disabled = true;\n    // } else {\n    //   inputWindow.disabled = false;\n    // }\n  };\n\n  const classes = useStyles();\n  const handleFuncObjs = { handleWallChange, handleWindowChange };\n  return (\n    <section className={ classes.mainWrapper }>\n      <ImgGenerator imgObj={ imgWindowObj } />\n      <ImgGenerator imgObj={ imgDoorObj } />\n      <WallsInputGenerator\n        wallCardsAmount={ quantityOfWalls }\n        wallMeasures={ wallMeasures }\n        handleFuncObjs={ handleFuncObjs } />\n    </section >);\n};\n\nexport default WallsCalc;","import WallsCalc from \"../components/WallsCalc\";\n\nconst LandingPage = () => {\n  const giantString = `Nenhuma parede pode ter menos de 1 metro nem mais de 15 metros, mas podem possuir alturas e larguras diferentes;\n   O total de área das portas e janelas deve ser no máximo 50 % da área de parede;\n  A altura de paredes com porta deve ser, no mínimo, 30 centímetros maior que a altura da porta;\n   Cada janela possui as medidas: 2, 00 x 1, 20 mtos;\n   Cada porta possui as medidas: 0, 80 x 1, 90;\n   Cada litro de tinta é capaz de pintar 5 metros quadrados;\n   Não considerar teto nem piso.;\n   As variações de tamanho das latas de tinta são:\n  - 0, 5 L\n  - 2, 5 L\n  - 3, 6 L\n  - 18 L `.split(';').map((item, index) => <li key={ index } style={ { padding: '10px' } }>{ item }</li>);\n  const wallMeasures = { minWallMeasures: 1, maxWallMeasures: 15 };\n  return (\n    <div>\n      <h1>Regras de negócio</h1>\n      <WallsCalc\n        quantityOfWalls={ 4 }\n        wallMeasures={ wallMeasures }\n      />\n      <div style={ { width: '500px', textAlign: 'start', margin: '0 auto' } }>\n        <ol>{ giantString }</ol>\n      </div>\n    </div>);\n};\n\nexport default LandingPage;","import { Route, Switch } from 'react-router-dom';\nimport LandingPage from '../pages/LandingPage';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path='/desafio-DIGITAL-REPUBLIC' component={ LandingPage }></Route>\n    </Switch>\n  );\n};\n\nexport default Routes;","import { orange } from '@material-ui/core/colors';\nimport { createTheme } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#f3d2c1'\n    },\n    secondary: {\n      main: '#8bd3dd'\n    },\n    error: {\n      main: orange[500]\n    },\n    text: {\n      primary: '#001858',\n      secondary: '#172c66',\n    },\n    background: {\n      default: '#f3d2c1',\n      paper: '#fef6e4'\n    },\n  },\n  custom: {\n    myOwnComponent: {\n      margin: \"10px 10px\",\n      backgroundColor: \"lightgreen\"\n    },\n    typography: {\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n    },\n  }\n});\n\nexport default theme;","import { ThemeProvider } from '@material-ui/core';\nimport './App.css';\nimport Routes from './Routes/Routes';\nimport theme from './styles/themeStyles';\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={ theme }>\n      <div style={ { backgroundColor: theme.palette.background.default } }>\n        <p>Uma aplicação web que ajude o usuário a calcular a quantidade de tinta necessária para pintar uma sala.</p>\n        <p>Essa aplicação deve considerar que a sala é composta de 4 paredes e deve permitir que o usuário escolha qual a medida de cada parede e quantas janelas e portas possuem cada parede.</p>\n        <p>Com base na quantidade necessária o sistema deve apontar tamanhos de lata de tinta que o usuário deve comprar.</p>\n        <Routes />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}