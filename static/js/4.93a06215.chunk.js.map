{"version":3,"sources":["styles/WallsInputStyles.js","components/ImgGenerator.js","components/WallsInputsGenerator.js","components/WallsCalc.js","pages/LandingPage.js","Routes/Routes.js"],"names":["useStyles","makeStyles","theme","mainWrapper","alignItems","background","palette","secondary","dark","border","borderRadius","display","flexFlow","gap","gridTemplateColumns","justifyContent","margin","padding","width","height","breakpoints","down","allContentWrapper","paper","color","text","primary","cardWrapper","alignContent","inputMeasures","marginLeft","imageWrapper","button","backgroundColor","fontSize","position","left","redoButton","resultWrapper","light","textAlign","ImgGenerator","imgObj","src","alt","textInfo","classes","className","style","WallsInputGenerator","wallCardsAmount","wallMeasures","handleFuncObjs","minWallMeasures","maxWallMeasures","handleWallChange","handleWindowChange","handleDoorChange","inputPropsWalls","inputProps","min","max","step","inputPropsWnD","theInputs","Array","fill","map","_amount","index","InputLabel","htmlFor","TextField","id","type","placeholder","InputProps","autoFocus","onChange","onKeyUp","required","WallsCalc","quantityOfWalls","useState","wallsAreas","setWallsAreas","totalAreas","setTotalAreas","showCalc","setShowCalc","finalTotal","setFinalTotal","bucketsCount","setBucketsCount","heightStr","lengthStr","windowStr","doorStr","useEffect","setTheTotalArea","wallNumber","theWallH","theWallL","totalWallArea","previous","i","divideToBucked","Number","getBuckets","verifyWorD","WindOrDoor","currWHeight","currWLength","currWindowId","currDoorId","currUseId","currInput","document","getElementById","totalPlacefulArea","totalCurrArea","initCalc","blockField","countWindows","areaDivision","block","fieldId","currField","disabled","value","target","spanEl","split","wall","number","wallLengthId","join","wallHeightId","innerText","toFixed","onClick","theFinalTotal","key","setTimeout","scrollIntoView","behavior","displayBuckets","Object","entries","fontWeight","listStyle","calculateBucketsNDisplay","focus","LandingPage","giantString","item","Routes","exact","path","component"],"mappings":"qLAsHeA,EA9GGC,aAAW,SAACC,GAAD,gBAAY,CACvCC,aAAW,GACTC,WAAY,SACZC,WAAYH,EAAMI,QAAQC,UAAUC,KACpCC,OAAO,oBACPC,aAAc,OACdC,QAAS,OACTC,SAAU,WACVC,IAAK,MACLC,oBAAqB,UACrBC,eAAgB,uBAChBC,OAAQ,SACRC,QAAS,MACTC,MAAO,MACPC,OAAQ,OAbC,cAcRjB,EAAMkB,YAAYC,KAAK,MAAQ,CAC9BR,IAAK,QACLI,QAAS,QACTC,MAAO,QAjBA,cAmBRhB,EAAMkB,YAAYC,KAAK,MAAQ,CAC9BR,IAAK,QACLK,MAAO,gBArBA,GAwBXI,mBAAiB,GACfjB,WAAYH,EAAMI,QAAQD,WAAWkB,MACrCd,OAAQ,oBACRC,aAAc,OACdc,MAAOtB,EAAMI,QAAQmB,KAAKC,QAC1Bf,QAAS,OACTC,SAAU,cACVG,eAAgB,gBAChBC,OAAQ,SACRC,QAAS,QACTC,MAAO,OAVQ,cAWdhB,EAAMkB,YAAYC,KAAK,MAAQ,CAC9BH,MAAO,QAZM,cAcdhB,EAAMkB,YAAYC,KAAK,MAAQ,CAC9BH,MAAO,gBAfM,GAkBjBS,YAAa,CACXvB,WAAY,SACZwB,aAAc,SACdnB,OAAQ,oBACRQ,QAAS,QACTD,OAAQ,aACRL,QAAS,OACTC,SAAU,WACVG,eAAgB,UAElBc,cAAe,CACbC,WAAY,QACZZ,MAAO,OAETa,cAAY,GACVH,aAAc,SACdxB,WAAY,SACZC,WAAYH,EAAMI,QAAQD,WAAWkB,MACrCd,OAAQ,oBACRC,aAAc,OACdc,MAAOtB,EAAMI,QAAQmB,KAAKC,QAC1Bf,QAAS,OACTC,SAAU,cACVG,eAAgB,SAChBC,OAAQ,SACRC,QAAS,QACTC,MAAO,OAZG,cAaThB,EAAMkB,YAAYC,KAAK,MAAQ,CAC9BH,MAAO,QAdC,cAgBThB,EAAMkB,YAAYC,KAAK,MAAQ,CAC9BH,MAAO,gBAjBC,GAoBZc,OAAQ,CACNC,gBAAiB,UACjBvB,aAAc,OACdc,MAAO,QACPU,SAAU,QACVC,SAAU,WACVC,KAAM,MACNlB,MAAO,OACPC,OAAQ,OAEVkB,WAAY,CACVJ,gBAAiB,UACjBvB,aAAc,OACdc,MAAO,QACPU,SAAU,QACVlB,OAAQ,SACRE,MAAO,OACPC,OAAQ,OAEVmB,cAAe,CACbjC,WAAYH,EAAMI,QAAQC,UAAUgC,MACpC9B,OAAQ,oBACRe,MAAOtB,EAAMI,QAAQmB,KAAKC,QAC1Bf,QAAS,OACTC,SAAU,cACVG,eAAgB,gBAChBC,OAAQ,SACRC,QAAS,QACTuB,UAAW,SACXtB,MAAO,mB,OClFIuB,EA9BM,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAAuBD,EAAvBC,IAAKC,EAAkBF,EAAlBE,IAAKC,EAAaH,EAAbG,SACZC,EAAU9C,IAChB,OACE,mCACE,sBAAK+C,UAAYD,EAAQf,aAAzB,UACE,iCACE,qBACEY,IAAMA,EACNC,IAAMA,EACNI,MAAQ,CACN3C,WAAY,QACZI,OAAQ,iBACRQ,QAAS,QACTC,MAAO,YAGb,4BAAK2B,U,kBCiEEI,EAhFa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,gBAAiBC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eACtDN,EAAU9C,IACRqD,EAAqCF,EAArCE,gBAAiBC,EAAoBH,EAApBG,gBACjBC,EAA4DH,EAA5DG,iBAAkBC,EAA0CJ,EAA1CI,mBAAoBC,EAAsBL,EAAtBK,iBACtCnC,EAAkDwB,EAAlDxB,kBAAmBK,EAA+BmB,EAA/BnB,YAAaE,EAAkBiB,EAAlBjB,cAClC6B,EAAkB,CACtBC,WAAY,CACVC,IAAKP,EACLQ,IAAKP,EACLQ,KAAM,MAGJC,EAAgB,CAAEJ,WAAY,CAAEC,IAAK,EAAGC,IAAK,IAC7CG,EAAYC,MAAMf,GAAiBgB,KAAK,IAAIC,KAAI,SAACC,EAASC,GAC9D,OACE,sBAA4CtB,UAAYzB,EAAxD,UACE,sBAAKyB,UAAYpB,EAAjB,UACE,eAAC2C,EAAA,EAAD,CAAYC,QAAO,eAAWF,EAAQ,EAAnB,WAAnB,2BAAmEA,EAAQ,EAA3E,QACA,cAACG,EAAA,EAAD,CAAWC,GAAE,eAAWJ,EAAQ,EAAnB,WACXtB,UAAYlB,EACZ6C,KAAK,SACLC,YAAY,OACZC,WAAalB,EACbmB,UAAYR,EAAQ,EACpBS,SAAWvB,EACXwB,QAAUxB,EACVyB,UAAQ,IAVZ,UAWE,sBAAMP,GAAE,eAAWJ,EAAQ,EAAnB,qBAEV,sBAAKtB,UAAYpB,EAAjB,UACE,eAAC2C,EAAA,EAAD,CAAYC,QAAO,eAAWF,EAAQ,EAAnB,WAAnB,gCAAwEA,EAAQ,EAAhF,QACA,cAACG,EAAA,EAAD,CAAWC,GAAE,eAAWJ,EAAQ,EAAnB,WACXtB,UAAYlB,EACZ6C,KAAK,SACLC,YAAY,OACZC,WAAalB,EACboB,SAAWvB,EACXwB,QAAUxB,EACVyB,UAAQ,IATZ,UAUE,sBAAMP,GAAE,eAAWJ,EAAQ,EAAnB,qBAEV,sBAAKtB,UAAYpB,EAAjB,UACE,cAAC2C,EAAA,EAAD,CAAYC,QAAO,eAAWF,EAAQ,EAAnB,WAAnB,sBACA,cAACG,EAAA,EAAD,CAAWC,GAAE,eAAWJ,EAAQ,EAAnB,WACXtB,UAAYlB,EACZ6C,KAAK,SACLC,YAAY,QACZC,WAAab,EACbe,SAAWtB,IAPf,gBAUA,sBAAKT,UAAYpB,EAAjB,UACE,cAAC2C,EAAA,EAAD,CAAYC,QAAO,eAAWF,EAAQ,EAAnB,SAAnB,sBACA,cAACG,EAAA,EAAD,CAAWC,GAAE,eAAWJ,EAAQ,EAAnB,SACXtB,UAAYlB,EACZ6C,KAAK,SACLC,YAAY,QACZC,WAAab,EACbe,SAAWrB,IAPf,iBApCF,8BAAkCY,OAiDtC,OAAQ,mCAAIL,KC8JCiB,EA5NG,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,gBAAiB/B,EAAmB,EAAnBA,aACpC,EAAoCgC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAoCN,mBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAwCR,mBAAS,CAAE,OAAQ,EAAG,QAAS,EAAG,QAAS,EAAG,QAAS,IAA/F,mBAAOS,EAAP,KAAqBC,EAArB,KACM/C,EAAU9C,IACV8F,EAAY,SACZC,EAAY,SACZC,EAAY,SACZC,EAAU,OAYhBC,qBAAU,WASR,IARA,IAAMC,EAAkB,SAACC,GACvB,IAAMC,EAAWjB,EAAW,QAAD,OAASgB,EAAT,YAAuBN,IAC5CQ,EAAWlB,EAAW,QAAD,OAASgB,EAAT,YAAuBL,IAClD,GAAIM,GAAYC,EAAU,CACxB,IAAMC,EAAgBF,EAAWC,EACjCf,GAAc,SAAAiB,GAAQ,kCAAUA,GAAV,iCAA6BJ,EAA7B,eAAuDG,SAGxEE,EAAI,EAAGA,GAAKvB,EAAiBuB,IACpCN,EAAgBM,KAEjB,CAACrB,EAAYF,IAEhBgB,qBAAU,WACR,GAAIR,EAAY,CAGd,IAFA,IAAIgB,EAAiBC,OAAOjB,GACxBkB,EAAa,CAAE,OAAQ,EAAG,QAAS,EAAG,QAAS,EAAG,QAAS,GACxDF,EAAiB,GAClBA,GAAkB,KACpBE,EAAW,SAAW,EACtBF,GAAkB,IAEhBA,EAAiB,IAAMA,GAAkB,KAC3CE,EAAW,UAAY,EACvBF,GAAkB,IAEhBA,EAAiB,IAAMA,GAAkB,OAC3CE,EAAW,UAAY,EACvBF,GAAkB,MAEhBA,EAAiB,MAAQA,EAAiB,IAC5CE,EAAW,UAAY,EACvBF,GAAkB,KAGtBb,EAAgBe,MAEjB,CAAClB,IAEJ,IAAMmB,EAAa,SAACC,EAAYC,EAAaC,EAAaC,EAAcC,GACtE,IAAMC,EAA2B,WAAfL,EAA0BG,EAAeC,EACrDE,EAAYC,SAASC,eAAeH,GAGpCI,EAAqC,IAFrBnC,EAAW2B,GAAe3B,EAAW4B,KAC9B5B,EAAW,GAAD,OAAI+B,EAAJ,iBAA+B,GAEhEK,EAA+B,WAAfV,EAA0B,IAA4B,IACtEW,EAA0B,WAAfX,EAA0B,CAAC,IAAK,GAAK,CAAC,IAAK,KAC5D,GAAI1B,EAAW2B,IAAgBU,EAAS,IAAMrC,EAAW4B,IAAgBS,EAAS,GAChF,GAAIF,GAAqBC,EAAe,CACtCE,GAAW,EAAOP,GAGlB,IAFA,IAAIQ,EAAe,EACfC,EAAeL,EACVd,EAAI,EAAImB,EAAeJ,GAAkB,EAAGf,IACnDkB,GAAgB,EAChBC,GAAgBJ,EAElBJ,EAAUzC,YAAV,cAA+BgD,GAC/BP,EAAUvD,IAAM8D,OAEhBD,GAAW,EAAMP,QAGnBO,GAAW,EAAMP,IAIfO,EAAa,SAACG,EAAOC,GACzB,IAAMC,EAAYV,SAASC,eAAeQ,GACtCD,GACFE,EAAUC,UAAW,EACrBD,EAAUpD,YAAc,QACxBoD,EAAUE,MAAQ,KAElBF,EAAUC,UAAW,EACrBD,EAAUpD,YAAc,KAqFtBvB,EAAiB,CAAEG,iBAlFA,SAAC,GAA+B,IAAD,IAA5B2E,OAAUzD,EAAkB,EAAlBA,GAAIwD,EAAc,EAAdA,MAClCE,EAASd,SAASC,eAAT,UAA2B7C,EAA3B,UACf,EAAwCA,EAAG2D,MAAM,KAAjD,mBAAOC,EAAP,KAAaC,EAAb,KACMC,GADN,KACqB,CAACF,EAAMC,EAAQvC,GAAWyC,KAAK,MAC9CC,EAAe,CAACJ,EAAMC,EAAQxC,GAAW0C,KAAK,KAC9CvB,EAAe,CAACoB,EAAMC,EAAQtC,GAAWwC,KAAK,KAC9CtB,EAAa,CAACmB,EAAMC,EAAQrC,GAASuC,KAAK,KAC5C7B,OAAOsB,IAAU,GAAKtB,OAAOsB,IAAU,IACzC5C,GAAc,SAAAmB,GAAQ,kCAAUA,GAAV,kBAAqB/B,EAAKkC,OAAOsB,QACvDpB,EAAW,SAAU4B,EAAcF,EAActB,EAAcC,GAC/DL,EAAW,OAAQ4B,EAAcF,EAActB,EAAcC,GAC7DiB,EAAOO,UAAY,KAEnBrD,GAAc,SAAAmB,GAAQ,kCAAUA,GAAV,kBAAqB/B,EAAK,QAChDoC,EAAW,SAAU4B,EAAcF,EAActB,EAAcC,GAC/DL,EAAW,OAAQ4B,EAAcF,EAActB,EAAcC,GAC7DiB,EAAOO,UAAsB,KAAVT,EAAe,sBAAwB,2BAkEnBzE,mBA/DhB,SAAC,GAA+B,IAAD,IAA5B0E,OAAUzD,EAAkB,EAAlBA,GAAIwD,EAAc,EAAdA,MAE1C5C,EAAc,2BAAKD,GAAN,4BAAsBX,EAAtB,eAAwCkC,OAD7B,IACoCsB,OA6DCxE,iBA1DtC,SAAC,GAA+B,IAAD,IAA5ByE,OAAUzD,EAAkB,EAAlBA,GAAIwD,EAAc,EAAdA,MAExC5C,GAAc,SAAAmB,GAAQ,kCAAUA,GAAV,4BAAwB/B,EAAxB,eAA0CkC,QAD1C,KACkDsB,GAAuBU,QAAQ,WAyDzG,OACE,qCACE,0BAAS5F,UAAYD,EAAQ3C,YAA7B,UACE,cAAC,EAAD,CAAcuC,OA/KC,CACnBC,IAAK,6FACLC,IAAK,gBACLC,SAAU,6CA6KN,cAAC,EAAD,CAAcH,OA3KD,CACjBC,IAAK,2GACLC,IAAK,eACLC,SAAU,4CAyKN,cAAC,EAAD,CACEK,gBAAkBgC,EAClB/B,aAAeA,EACfC,eAAiBA,IACnB,8BACE,wBAAQsB,KAAK,SACX3B,UAAYD,EAAQd,OACpB4G,QA5CW,WACnBnD,GAAY,GACZ,IAAIoD,EAAgB,EACpB,IAAK,IAAIC,KAAOxD,EACduD,GAAiBvD,EAAWwD,GAE9BnD,EAAckD,EAAcF,QAAQ,IACpCI,YAAW,WACW1B,SAASC,eAAe,iBAChC0B,eAAe,CAAEC,SAAU,aACtC,MAgCG,2BAKDzD,EACD,sBAAKzC,UAAYD,EAAQR,cAAzB,UACE,oBAAImC,GAAG,gBAAP,wBACA,oBAAIzB,MAAQ,CAAE/B,QAAS,IAAKD,OAAQ,UAApC,SAxEyB,WAC/B,IAAMkI,EAAiBC,OAAOC,QAAQxD,GAAczB,KAAI,WAAeE,GAAf,uBAAEyE,EAAF,KAAOb,EAAP,YACtD,qBACEjF,MAAQ,CACNf,gBAAiB,QACjBvB,aAAc,OACdc,MAAO,UACP6H,WAAY,MACZC,UAAW,OACXtI,OAAQ,SAPZ,mBASS8H,EATT,MASmBb,IATT5D,MAWZ,OACE,qCACE,qBAAIrB,MAAQ,CAAEhC,OAAQ,cAAtB,gCAAyDkE,EAAzD,aAAsFQ,EAAtF,WACA,oBAAI1C,MAAQ,CAAEhC,OAAQ,cAAtB,4BACEkI,KAwDIK,KAEJ,wBAAQ7E,KAAK,SACX3B,UAAYD,EAAQT,WACpBuG,QA1CS,WACjBnD,GAAY,GACZI,EAAgB,CAAE,OAAQ,EAAG,QAAS,EAAG,QAAS,EAAG,QAAS,IAC9DF,EAAc,GACdJ,EAAc,IACdF,EAAc,IACd,IAAK,IAAIoB,EAAI,EAAGA,GAAKvB,EAAiBuB,IACpCY,SAASC,eAAT,eAAgCb,EAAhC,YAA4CwB,MAAQ,GACpDZ,SAASC,eAAT,eAAgCb,EAAhC,YAA4CwB,MAAQ,GACpDZ,SAASC,eAAT,eAAgCb,EAAhC,YAA4CwB,MAAQ,GACpDZ,SAASC,eAAT,eAAgCb,EAAhC,UAA0CwB,MAAQ,GAClDP,GAAW,EAAD,eAAejB,EAAf,YACViB,GAAW,EAAD,eAAejB,EAAf,UAEOY,SAASC,eAAe,iBAChCkC,SAyBL,yBANU,O,QCzKLC,EAhCK,WAClB,IAAMC,EAAc,0nBAWVtB,MAAM,KAAKjE,KAAI,SAACwF,EAAMtF,GAAP,OAAiB,oBACxCrB,MAAQ,CAAExB,MAAOtB,IAAMI,QAAQmB,KAAKC,QAASc,UAAW,SAAUvB,QAAS,iBADnC,SACyD0I,GAD/CtF,MAGpD,OACE,gCACE,oBAAIrB,MAAQ,CACVxB,MAAOtB,IAAMI,QAAQmB,KAAKC,QAASc,UAAW,UADhD,kCAGA,kCACE,qBAAKQ,MAAQ,CAAE9B,MAAO,MAAOsB,UAAW,QAASxB,OAAQ,UAAzD,SACE,oBAAIgC,MAAQ,CAAErC,QAAS,OAAQG,oBAAqB,UAAWD,IAAK,SAApE,SAAkF6I,QAGtF,cAAC,EAAD,CACExE,gBAAkB,EAClB/B,aAbe,CAAEE,gBAAiB,EAAGC,gBAAiB,UCJ/CsG,UAVA,WACb,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,4BAA4BC,UAAYN","file":"static/js/4.93a06215.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\n// {\n//   xs: 0,\n//   sm: 600,\n//   md: 900,\n//   lg: 1200,\n//   xl: 1536,\n// },\nconst useStyles = makeStyles((theme) => ({\n  mainWrapper: {\n    alignItems: 'center',\n    background: theme.palette.secondary.dark,\n    border: `5px solid #001858`,\n    borderRadius: '40px',\n    display: 'grid',\n    flexFlow: 'row wrap',\n    gap: '1em',\n    gridTemplateColumns: '1fr 1fr',\n    justifyContent: 'center space-between',\n    margin: '0 auto',\n    padding: '1em',\n    width: '50%',\n    height: '80%',\n    [theme.breakpoints.down('md')]: {\n      gap: '0.8em',\n      padding: '0.5em',\n      width: '70%'\n    },\n    [theme.breakpoints.down('sm')]: {\n      gap: '0.3em',\n      width: 'fit-content'\n    }\n  },\n  allContentWrapper: {\n    background: theme.palette.background.paper,\n    border: '3px solid #001858',\n    borderRadius: '10px',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'space-between',\n    margin: '0 auto',\n    padding: '0.5em',\n    width: '80%',\n    [theme.breakpoints.down('md')]: {\n      width: '80%',\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: 'fit-content',\n    }\n  },\n  cardWrapper: {\n    alignItems: 'center',\n    alignContent: 'center',\n    border: '1px solid #001858',\n    padding: '0.3em',\n    margin: '0.5em auto',\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'center',\n  },\n  inputMeasures: {\n    marginLeft: '0.2em',\n    width: '4em'\n  },\n  imageWrapper: {\n    alignContent: 'center',\n    alignItems: 'center',\n    background: theme.palette.background.paper,\n    border: '3px solid #001858',\n    borderRadius: '10px',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'center',\n    margin: '0 auto',\n    padding: '0.5em',\n    width: '90%',\n    [theme.breakpoints.down('md')]: {\n      width: '60%',\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: 'fit-content',\n    }\n  },\n  button: {\n    backgroundColor: '#001858',\n    borderRadius: '40px',\n    color: 'white',\n    fontSize: '1.5em',\n    position: 'relative',\n    left: '50%',\n    width: '100%',\n    height: '5vh',\n  },\n  redoButton: {\n    backgroundColor: '#001858',\n    borderRadius: '40px',\n    color: 'white',\n    fontSize: '1.5em',\n    margin: '0 auto',\n    width: '100%',\n    height: '5vh',\n  },\n  resultWrapper: {\n    background: theme.palette.secondary.light,\n    border: '3px solid #001858',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'space-between',\n    margin: '0 auto',\n    padding: '0.5em',\n    textAlign: 'center',\n    width: 'fit-content',\n  }\n}));\n\nexport default useStyles;","import PropTypes from 'prop-types';\nimport useStyles from '../styles/WallsInputStyles';\nconst ImgGenerator = ({ imgObj }) => {\n  const { src, alt, textInfo } = imgObj;\n  const classes = useStyles();\n  return (\n    <>\n      <div className={ classes.imageWrapper }>\n        <figure>\n          <img\n            src={ src }\n            alt={ alt }\n            style={ {\n              background: 'white',\n              border: '2px solid grey',\n              padding: '0.5em',\n              width: '10em'\n            } } />\n        </figure>\n        <p>{ textInfo }</p>\n      </div>\n    </>);\n};\n\nImgGenerator.propTypes = {\n  imgObj: PropTypes.shape({\n    src: PropTypes.string,\n    alt: PropTypes.string,\n    textInfo: PropTypes.string,\n  }),\n};\n\nexport default ImgGenerator;","import { InputLabel, TextField } from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport useStyles from '../styles/WallsInputStyles';\n\nconst WallsInputGenerator = ({ wallCardsAmount, wallMeasures, handleFuncObjs }) => {\n  const classes = useStyles();\n  const { minWallMeasures, maxWallMeasures } = wallMeasures;\n  const { handleWallChange, handleWindowChange, handleDoorChange, } = handleFuncObjs;\n  const { allContentWrapper, cardWrapper, inputMeasures } = classes;\n  const inputPropsWalls = {\n    inputProps: {\n      min: minWallMeasures,\n      max: maxWallMeasures,\n      step: 0.01,\n    }\n  };\n  const inputPropsWnD = { inputProps: { min: 0, max: 0 } };\n  const theInputs = Array(wallCardsAmount).fill('').map((_amount, index) => {\n    return (\n      <div key={ `all-content-wrapper-${index}` } className={ allContentWrapper }>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-height` }>Altura Parede { index + 1 } :</InputLabel>\n          <TextField id={ `wall-${index + 1}-height` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='1-15'\n            InputProps={ inputPropsWalls }\n            autoFocus={ index < 1 ? true : false }\n            onChange={ handleWallChange }\n            onKeyUp={ handleWallChange }\n            required /> metros\n          <span id={ `wall-${index + 1}-height-span` }></span>\n        </div>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-length` }>Comprimento Parede { index + 1 } :</InputLabel>\n          <TextField id={ `wall-${index + 1}-length` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='1-15'\n            InputProps={ inputPropsWalls }\n            onChange={ handleWallChange }\n            onKeyUp={ handleWallChange }\n            required /> metros\n          <span id={ `wall-${index + 1}-length-span` }></span>\n        </div>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-window` }>Possui :</InputLabel>\n          <TextField id={ `wall-${index + 1}-window` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='Block'\n            InputProps={ inputPropsWnD }\n            onChange={ handleWindowChange }\n          /> janela(s)\n        </div>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-door` }>Possui :</InputLabel>\n          <TextField id={ `wall-${index + 1}-door` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='Block'\n            InputProps={ inputPropsWnD }\n            onChange={ handleDoorChange }\n          /> porta(s)\n        </div>\n      </div >\n    );\n  });\n  return (<>{ theInputs }</>);\n};\n\nWallsInputGenerator.propTypes = {\n  quantityOfWalls: PropTypes.number,\n  wallMeasures: PropTypes.shape({\n    minWallMeasures: PropTypes.number,\n    maxWallMeasures: PropTypes.number,\n  }),\n  handleFuncObjs: PropTypes.shape({\n    handleWallChange: PropTypes.func,\n    handleWindowChange: PropTypes.func,\n    handleDoorChange: PropTypes.func,\n  })\n};\n\nexport default WallsInputGenerator;","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport useStyles from '../styles/WallsInputStyles';\nimport ImgGenerator from './ImgGenerator';\nimport WallsInputGenerator from './WallsInputsGenerator';\n\nconst WallsCalc = ({ quantityOfWalls, wallMeasures }) => {\n  const [wallsAreas, setWallsAreas] = useState({});\n  const [totalAreas, setTotalAreas] = useState({});\n  const [showCalc, setShowCalc] = useState(false);\n  const [finalTotal, setFinalTotal] = useState(0);\n  const [bucketsCount, setBucketsCount] = useState({ \"18 L\": 0, \"3,6 L\": 0, \"2,5 L\": 0, \"0,5 L\": 0 });\n  const classes = useStyles();\n  const heightStr = 'height';\n  const lengthStr = 'length';\n  const windowStr = 'window';\n  const doorStr = 'door';\n  const imgWindowObj = {\n    src: 'https://amgestoroutput.s3.amazonaws.com/jcmateriais/img_produtos/638265-14535830_thumb.png',\n    alt: 'imagem-janela',\n    textInfo: 'Medida da Janela: 2,00m (L) x 1,20m (A)'\n  };\n  const imgDoorObj = {\n    src: 'https://mobileimages.lowes.com/productimages/b0196113-822f-4b05-ab2c-4b43b30e56ef/04744195.jpg?size=pdhi',\n    alt: 'imagem-porta',\n    textInfo: 'Medida da Porta: 0,80m (L) x 1,90m (A)'\n  };\n\n  useEffect(() => {\n    const setTheTotalArea = (wallNumber) => {\n      const theWallH = wallsAreas[`wall-${wallNumber}-${heightStr}`];\n      const theWallL = wallsAreas[`wall-${wallNumber}-${lengthStr}`];\n      if (theWallH && theWallL) {\n        const totalWallArea = theWallH * theWallL;\n        setTotalAreas(previous => ({ ...previous, [`wall-${wallNumber}-total-area`]: totalWallArea }));\n      }\n    };\n    for (let i = 1; i <= quantityOfWalls; i++) {\n      setTheTotalArea(i);\n    }\n  }, [wallsAreas, quantityOfWalls]);\n\n  useEffect(() => {\n    if (finalTotal) {\n      let divideToBucked = Number(finalTotal);\n      let getBuckets = { \"18 L\": 0, \"3,6 L\": 0, \"2,5 L\": 0, \"0,5 L\": 0 };\n      while (divideToBucked > 0) {\n        if (divideToBucked >= 90) {\n          getBuckets[\"18 L\"] += 1;\n          divideToBucked -= 90;\n        }\n        if (divideToBucked < 90 && divideToBucked >= 18) {\n          getBuckets[\"3,6 L\"] += 1;\n          divideToBucked -= 18;\n        }\n        if (divideToBucked < 18 && divideToBucked >= 12.5) {\n          getBuckets[\"2,5 L\"] += 1;\n          divideToBucked -= 12.5;\n        }\n        if (divideToBucked < 12.5 && divideToBucked > 0) {\n          getBuckets[\"0,5 L\"] += 1;\n          divideToBucked -= 2.5;\n        }\n      }\n      setBucketsCount(getBuckets);\n    }\n  }, [finalTotal]);\n\n  const verifyWorD = (WindOrDoor, currWHeight, currWLength, currWindowId, currDoorId) => {\n    const currUseId = WindOrDoor === 'window' ? currWindowId : currDoorId;\n    const currInput = document.getElementById(currUseId);\n    const totalWallArea = wallsAreas[currWHeight] * wallsAreas[currWLength];\n    const currOpositeTotalArea = wallsAreas[`${currUseId}-total-area`] || 0;\n    const totalPlacefulArea = (totalWallArea * 0.5) - currOpositeTotalArea;\n    const totalCurrArea = WindOrDoor === 'window' ? 2.4 /* 1.2 (A) x 2 (L) */ : 1.5; // 1.9 (A) x 0.8 (L)\n    const initCalc = WindOrDoor === 'window' ? [1.2, 2] : [2.2, 1.6];\n    if (wallsAreas[currWHeight] >= initCalc[0] && wallsAreas[currWLength] >= initCalc[1]) {\n      if (totalPlacefulArea >= totalCurrArea) {\n        blockField(false, currUseId);\n        let countWindows = 0;\n        let areaDivision = totalPlacefulArea;\n        for (let i = 0; (areaDivision / totalCurrArea) >= 1; i++) {\n          countWindows += 1;\n          areaDivision -= totalCurrArea;\n        }\n        currInput.placeholder = `max ${countWindows}`;\n        currInput.max = countWindows;\n      } else {\n        blockField(true, currUseId);\n      }\n    } else {\n      blockField(true, currUseId);\n    }\n  };\n\n  const blockField = (block, fieldId) => {\n    const currField = document.getElementById(fieldId);\n    if (block) {\n      currField.disabled = true;\n      currField.placeholder = 'Block';\n      currField.value = '';\n    } else {\n      currField.disabled = false;\n      currField.placeholder = '';\n    }\n  };\n  const handleWallChange = ({ target: { id, value } }) => {\n    const spanEl = document.getElementById(`${id}-span`);\n    const [wall, number, _heigthOrLenght] = id.split('-');\n    const wallLengthId = [wall, number, lengthStr].join('-');\n    const wallHeightId = [wall, number, heightStr].join('-');\n    const currWindowId = [wall, number, windowStr].join('-');\n    const currDoorId = [wall, number, doorStr].join('-');\n    if (Number(value) >= 1 && Number(value) <= 15) {\n      setWallsAreas(previous => ({ ...previous, [id]: Number(value) }));\n      verifyWorD('window', wallHeightId, wallLengthId, currWindowId, currDoorId);\n      verifyWorD('door', wallHeightId, wallLengthId, currWindowId, currDoorId);\n      spanEl.innerText = '';\n    } else {\n      setWallsAreas(previous => ({ ...previous, [id]: '' }));\n      verifyWorD('window', wallHeightId, wallLengthId, currWindowId, currDoorId);\n      verifyWorD('door', wallHeightId, wallLengthId, currWindowId, currDoorId);\n      spanEl.innerText = value === '' ? 'Preencha este campo' : 'Valor incorreto ❌';\n    }\n  };\n  const handleWindowChange = ({ target: { id, value } }) => {\n    const windowTotalArea = 2.4; // 1.2 (A) * 2 (L);\n    setWallsAreas({ ...wallsAreas, [`${id}-total-area`]: Number(value * windowTotalArea) });\n  };\n\n  const handleDoorChange = ({ target: { id, value } }) => {\n    const doorTotalArea = 1.52; // 1.9 (A) * 0.8 (L);\n    setWallsAreas(previous => ({ ...previous, [`${id}-total-area`]: Number((value * doorTotalArea).toFixed(2)) }));\n  };\n\n  const calculateBucketsNDisplay = () => {\n    const displayBuckets = Object.entries(bucketsCount).map(([key, value], index) =>\n      <li key={ index }\n        style={ {\n          backgroundColor: 'white',\n          borderRadius: '40px',\n          color: '#001858',\n          fontWeight: '500',\n          listStyle: 'none',\n          margin: '0.5em',\n        } }\n      >Balde { key } : { value }</li>\n    );\n    return (\n      <>\n        <h3 style={ { margin: '0.5em auto' } }> Área total das { quantityOfWalls } paredes: { finalTotal }m²</h3>\n        <h4 style={ { margin: '0.5em auto' } }>Necessário:</h4>\n        { displayBuckets }\n      </>\n    );\n  };\n\n  const handleSubmit = () => {\n    setShowCalc(true);\n    let theFinalTotal = 0;\n    for (let key in totalAreas) {\n      theFinalTotal += totalAreas[key];\n    }\n    setFinalTotal(theFinalTotal.toFixed(2));\n    setTimeout(() => {\n      const resultTitle = document.getElementById('title-Results');\n      resultTitle.scrollIntoView({ behavior: 'smooth' });\n    }, 100);\n  };\n\n  const handleRedo = () => {\n    setShowCalc(false);\n    setBucketsCount({ \"18 L\": 0, \"3,6 L\": 0, \"2,5 L\": 0, \"0,5 L\": 0 });\n    setFinalTotal(0);\n    setTotalAreas({});\n    setWallsAreas({});\n    for (let i = 1; i <= quantityOfWalls; i++) {\n      document.getElementById(`wall-${i}-height`).value = '';\n      document.getElementById(`wall-${i}-length`).value = '';\n      document.getElementById(`wall-${i}-window`).value = '';\n      document.getElementById(`wall-${i}-door`).value = '';\n      blockField(true, `wall-${i}-window`);\n      blockField(true, `wall-${i}-door`);\n    }\n    const firstInput = document.getElementById('wall-1-height');\n    firstInput.focus();\n  };\n\n  const handleFuncObjs = { handleWallChange, handleWindowChange, handleDoorChange };\n  return (\n    <>\n      <section className={ classes.mainWrapper }>\n        <ImgGenerator imgObj={ imgWindowObj } />\n        <ImgGenerator imgObj={ imgDoorObj } />\n        <WallsInputGenerator\n          wallCardsAmount={ quantityOfWalls }\n          wallMeasures={ wallMeasures }\n          handleFuncObjs={ handleFuncObjs } />\n        <div>\n          <button type='button'\n            className={ classes.button }\n            onClick={ handleSubmit }>CALCULAR</button>\n        </div>\n      </section >\n      { !showCalc ? '' :\n        <div className={ classes.resultWrapper }>\n          <h1 id='title-Results'>Resultados</h1>\n          <ul style={ { padding: '0', margin: '0 auto' } }>\n            { calculateBucketsNDisplay() }\n          </ul>\n          <button type='button'\n            className={ classes.redoButton }\n            onClick={ handleRedo }>Refazer?</button>\n        </div> }\n    </>);\n};\n\nWallsCalc.propTypes = {\n  quantityOfWalls: PropTypes.number,\n  wallMeasures: PropTypes.shape({\n    minWallMeasures: PropTypes.number,\n    maxWallMeasures: PropTypes.number,\n  }),\n};\n\n\nexport default WallsCalc;","import WallsCalc from \"../components/WallsCalc\";\nimport theme from \"../styles/themeStyles\";\n\nconst LandingPage = () => {\n  const giantString = `Nenhuma parede pode ter menos de 1 metro nem mais de 15 metros, mas podem possuir alturas e larguras diferentes;\n   O total de área das portas e janelas deve ser no máximo 50 % da área de parede;\n  A altura de paredes com porta deve ser, no mínimo, 30 centímetros maior que a altura da porta;\n   Cada janela possui as medidas: 2, 00 x 1, 20 mtos;\n   Cada porta possui as medidas: 0, 80 x 1, 90;\n   Cada litro de tinta é capaz de pintar 5 metros quadrados;\n   Não considerar teto nem piso.;\n   As variações de tamanho das latas de tinta são:\n  -> 0, 5 L,\n  -> 2, 5 L,\n  -> 3, 6 L,\n  -> 18 L `.split(';').map((item, index) => <li key={ index }\n    style={ { color: theme.palette.text.primary, textAlign: 'center', padding: '0.2em 1em 0 0' } }>{ item }</li>);\n  const wallMeasures = { minWallMeasures: 1, maxWallMeasures: 15 };\n  return (\n    <div>\n      <h2 style={ {\n        color: theme.palette.text.primary, textAlign: 'center'\n      } }>Regras de negócio</h2>\n      <summary>\n        <div style={ { width: '80%', textAlign: 'start', margin: '0 auto' } }>\n          <ul style={ { display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0 1em' } }>{ giantString }</ul>\n        </div>\n      </summary>\n      <WallsCalc\n        quantityOfWalls={ 4 }\n        wallMeasures={ wallMeasures }\n      />\n    </div>);\n};\n\nexport default LandingPage;","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from '../pages/LandingPage';\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/desafio-DIGITAL-REPUBLIC' component={ LandingPage }></Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;"],"sourceRoot":""}