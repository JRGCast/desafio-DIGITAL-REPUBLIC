{"version":3,"sources":["styles/AppStyles.js","components/AppInside.js","styles/WallsInputStyles.js","components/ImgGenerator.js","components/WallsInputsGenerator.js","components/WallsCalc.js","styles/themeStyles.js","pages/LandingPage.js","Routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","mainWrapper","background","palette","default","title","color","text","primary","margin","paddingTop","textAlign","subtitle","secondary","width","AppInside","appClasses","className","alignItems","light","border","display","flexFlow","gap","gridTemplateColumns","justifyContent","padding","height","breakpoints","down","allContentWrapper","paper","cardWrapper","alignContent","inputMeasures","marginLeft","imageWrapper","button","backgroundColor","borderRadius","fontSize","position","left","redoButton","resultWrapper","ImgGenerator","imgObj","src","alt","textInfo","classes","style","WallsInputGenerator","wallCardsAmount","wallMeasures","handleFuncObjs","minWallMeasures","maxWallMeasures","handleWallChange","handleWindowChange","handleDoorChange","inputPropsWalls","inputProps","min","max","step","inputPropsWnD","theInputs","Array","fill","map","_amount","index","InputLabel","htmlFor","TextField","id","type","placeholder","InputProps","autoFocus","onChange","onKeyUp","required","WallsCalc","quantityOfWalls","useState","wallsAreas","setWallsAreas","totalAreas","setTotalAreas","showCalc","setShowCalc","finalTotal","setFinalTotal","bucketsCount","setBucketsCount","heightStr","lengthStr","windowStr","doorStr","useEffect","setTheTotalArea","wallNumber","theWallH","theWallL","totalWallArea","previous","i","divideToBucked","Number","getBuckets","console","log","verifyWorD","WindOrDoor","currWHeight","currWLength","currWindowId","currDoorId","currUseId","currInput","document","getElementById","totalPlacefulArea","totalCurrArea","initCalc","blockField","countWindows","areaDivision","block","fieldId","currField","disabled","value","target","spanEl","split","wall","number","wallLengthId","join","wallHeightId","innerText","toFixed","onClick","theFinalTotal","key","setTimeout","scrollIntoView","behavior","displayBuckets","Object","entries","fontWeight","listStyle","calculateBucketsNDisplay","focus","createTheme","main","error","orange","custom","myOwnComponent","typography","fontFamily","LandingPage","giantString","item","Routes","exact","path","component","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.e69fde11.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\n// {\n//   xs: 0,\n//   sm: 600,\n//   md: 900,\n//   lg: 1200,\n//   xl: 1536,\n// },\nconst useStyles = makeStyles((theme) => ({\n  mainWrapper: {\n    background: theme.palette.background.default\n  },\n  title: {\n    color: theme.palette.text.primary,\n    margin: '0 auto',\n    paddingTop: '0.5em',\n    textAlign: 'center'\n  },\n  subtitle: {\n    color: theme.palette.text.secondary,\n    margin: '0 auto',\n    textAlign: 'center',\n    width: '50%'\n  }\n}));\n\nexport default useStyles;","\nimport useStyles from '../styles/AppStyles';\n\nconst AppInside = () => {\n  const appClasses = useStyles();\n  return (<>\n    <header>\n      <h1 className={ appClasses.title }>LOJA DE TINTAS\n      </h1>\n      <p className={ appClasses.subtitle }>Uma aplicação web que ajude o usuário a calcular a quantidade de tinta necessária para pintar uma sala.</p>\n    </header>\n    <hr />\n    <p className={ appClasses.subtitle }>Essa aplicação deve considerar que a sala é composta de 4 paredes e deve permitir que o usuário escolha qual a medida de cada parede e quantas janelas e portas possuem cada parede.\n      Com base na quantidade necessária o sistema deve apontar tamanhos de lata de tinta que o usuário deve comprar.</p></>);\n};\n\nexport default AppInside;","import { makeStyles } from '@material-ui/core';\n// {\n//   xs: 0,\n//   sm: 600,\n//   md: 900,\n//   lg: 1200,\n//   xl: 1536,\n// },\nconst useStyles = makeStyles((theme) => ({\n  mainWrapper: {\n    alignItems: 'center',\n    background: theme.palette.primary.light,\n    border: `5px solid #001858`,\n    display: 'grid',\n    flexFlow: 'row wrap',\n    gap: '1em',\n    gridTemplateColumns: '1fr 1fr',\n    justifyContent: 'center space-between',\n    margin: '0 auto',\n    padding: '1em',\n    width: '50%',\n    height: '80%',\n    [theme.breakpoints.down('md')]: {\n      gap: '0.8em',\n      padding: '0.5em',\n      width: '70%'\n    },\n    [theme.breakpoints.down('sm')]: {\n      gap: '0.3em',\n      width: 'fit-content'\n    }\n  },\n  allContentWrapper: {\n    background: theme.palette.background.paper,\n    border: '3px solid #001858',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'space-between',\n    margin: '0 auto',\n    padding: '0.5em',\n    width: '80%',\n    [theme.breakpoints.down('md')]: {\n      width: '80%',\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: 'fit-content',\n    }\n  },\n  cardWrapper: {\n    alignItems: 'center',\n    alignContent: 'center',\n    border: '1px solid #001858',\n    padding: '0.3em',\n    margin: '0.5em auto',\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'center',\n  },\n  inputMeasures: {\n    marginLeft: '0.2em',\n    width: '4em'\n  },\n  imageWrapper: {\n    alignContent: 'center',\n    alignItems: 'center',\n    background: theme.palette.background.paper,\n    border: '3px solid #001858',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'center',\n    margin: '0 auto',\n    padding: '0.5em',\n    width: '90%',\n    [theme.breakpoints.down('md')]: {\n      width: '60%',\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: 'fit-content',\n    }\n  },\n  button: {\n    backgroundColor: '#001858',\n    borderRadius: '40px',\n    color: 'white',\n    fontSize: '1.5em',\n    position: 'relative',\n    left: '50%',\n    width: '100%',\n    height: '5vh',\n  },\n  redoButton: {\n    backgroundColor: '#001858',\n    borderRadius: '40px',\n    color: 'white',\n    fontSize: '1.5em',\n    margin: '0 auto',\n    width: '100%',\n    height: '5vh',\n  },\n  resultWrapper: {\n    background: theme.palette.background.paper,\n    border: '3px solid #001858',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'space-between',\n    margin: '0 auto',\n    padding: '0.5em',\n    textAlign: 'center',\n    width: 'fit-content',\n    // [theme.breakpoints.down('md')]: {\n    //   width: '50%',\n    // },\n    // [theme.breakpoints.down('sm')]: {\n    //   width: 'fit-content',\n    // }\n  }\n}));\n\nexport default useStyles;","import useStyles from '../styles/WallsInputStyles';\nconst ImgGenerator = ({ imgObj }) => {\n  const { src, alt, textInfo } = imgObj;\n  const classes = useStyles();\n  return (\n    <>\n      <div className={ classes.imageWrapper }>\n        <figure>\n          <img\n            src={ src }\n            alt={ alt }\n            style={ {\n              background: 'white',\n              border: '2px solid grey',\n              padding: '0.5em',\n              width: '10em'\n            } } />\n        </figure>\n        <p>{ textInfo }</p>\n      </div>\n      {/*<div className={ classes.imageWrapper }>\n        <figure>\n          <img\n            src='https://mobileimages.lowes.com/productimages/b0196113-822f-4b05-ab2c-4b43b30e56ef/04744195.jpg?size=pdhi'\n            alt='porta'\n            style={ {\n              background: 'white',\n              border: '2px solid grey',\n              padding: '0.5em',\n              width: '10em'\n            } } />\n        </figure>\n        <p >Medida da Porta: 0,80m (L) x 1,90m (A)</p>\n      </div> */}\n    </>);\n};\n\nexport default ImgGenerator;","import { InputLabel, TextField } from \"@material-ui/core\";\nimport useStyles from '../styles/WallsInputStyles';\n\nconst WallsInputGenerator = ({ wallCardsAmount, wallMeasures, handleFuncObjs }) => {\n  const classes = useStyles();\n  const { minWallMeasures, maxWallMeasures } = wallMeasures;\n  const { handleWallChange, handleWindowChange, handleDoorChange, } = handleFuncObjs;\n  const { allContentWrapper, cardWrapper, inputMeasures } = classes;\n  const inputPropsWalls = {\n    inputProps: {\n      min: minWallMeasures,\n      max: maxWallMeasures,\n      step: 0.01,\n    }\n  };\n  const inputPropsWnD = { inputProps: { min: 0, max: 0 } };\n  const theInputs = Array(wallCardsAmount).fill('').map((_amount, index) => {\n    return (\n      <div key={ `all-content-wrapper-${index}` } className={ allContentWrapper }>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-height` }>Altura Parede { index + 1 } :</InputLabel>\n          <TextField id={ `wall-${index + 1}-height` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='1-15'\n            InputProps={ inputPropsWalls }\n            autoFocus={ index < 1 ? true : false }\n            onChange={ handleWallChange }\n            onKeyUp={ handleWallChange }\n            required /> metros\n          <span id={ `wall-${index + 1}-height-span` }></span>\n        </div>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-length` }>Comprimento Parede { index + 1 } :</InputLabel>\n          <TextField id={ `wall-${index + 1}-length` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='1-15'\n            InputProps={ inputPropsWalls }\n            onChange={ handleWallChange }\n            onKeyUp={ handleWallChange }\n            required /> metros\n          <span id={ `wall-${index + 1}-length-span` }></span>\n        </div>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-window` }>Possui :</InputLabel>\n          <TextField id={ `wall-${index + 1}-window` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='Block'\n            InputProps={ inputPropsWnD }\n            onChange={ handleWindowChange }\n          /> janela(s)\n        </div>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-door` }>Possui :</InputLabel>\n          <TextField id={ `wall-${index + 1}-door` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='Block'\n            InputProps={ inputPropsWnD }\n            onChange={ handleDoorChange }\n          /> porta(s)\n        </div>\n      </div >\n    );\n  });\n  return (<>{ theInputs }</>);\n};\n\nexport default WallsInputGenerator;","import { useEffect, useState } from 'react';\nimport useStyles from '../styles/WallsInputStyles';\nimport ImgGenerator from './ImgGenerator';\nimport WallsInputGenerator from './WallsInputsGenerator';\n\nconst WallsCalc = ({ quantityOfWalls, wallMeasures }) => {\n  const [wallsAreas, setWallsAreas] = useState({});\n  const [totalAreas, setTotalAreas] = useState({});\n  const [showCalc, setShowCalc] = useState(false);\n  const [finalTotal, setFinalTotal] = useState(0);\n  const [bucketsCount, setBucketsCount] = useState({ \"18 L\": 0, \"3,6 L\": 0, \"2,5 L\": 0, \"0,5 L\": 0 });\n  const classes = useStyles();\n  const heightStr = 'height';\n  const lengthStr = 'length';\n  const windowStr = 'window';\n  const doorStr = 'door';\n  const imgWindowObj = {\n    src: 'https://amgestoroutput.s3.amazonaws.com/jcmateriais/img_produtos/638265-14535830_thumb.png',\n    alt: 'imagem-janela',\n    textInfo: 'Medida da Janela: 2,00m (L) x 1,20m (A)'\n  };\n  const imgDoorObj = {\n    src: 'https://mobileimages.lowes.com/productimages/b0196113-822f-4b05-ab2c-4b43b30e56ef/04744195.jpg?size=pdhi',\n    alt: 'imagem-porta',\n    textInfo: 'Medida da Porta: 0,80m (L) x 1,90m (A)'\n  };\n\n  useEffect(() => {\n    const setTheTotalArea = (wallNumber) => {\n      const theWallH = wallsAreas[`wall-${wallNumber}-${heightStr}`];\n      const theWallL = wallsAreas[`wall-${wallNumber}-${lengthStr}`];\n      if (theWallH && theWallL) {\n        const totalWallArea = theWallH * theWallL;\n        setTotalAreas(previous => ({ ...previous, [`wall-${wallNumber}-total-area`]: totalWallArea }));\n      }\n    };\n    for (let i = 1; i <= quantityOfWalls; i++) {\n      setTheTotalArea(i);\n    }\n  }, [wallsAreas, quantityOfWalls]);\n\n  useEffect(() => {\n    if (finalTotal) {\n      let divideToBucked = Number(finalTotal);\n      let getBuckets = { \"18 L\": 0, \"3,6 L\": 0, \"2,5 L\": 0, \"0,5 L\": 0 };\n      while (divideToBucked > 0) {\n        if (divideToBucked >= 90) {\n          getBuckets[\"18 L\"] += 1;\n          divideToBucked -= 90;\n        }\n        if (divideToBucked < 90 && divideToBucked >= 18) {\n          getBuckets[\"3,6 L\"] += 1;\n          divideToBucked -= 18;\n        }\n        if (divideToBucked < 18 && divideToBucked >= 12.5) {\n          getBuckets[\"2,5 L\"] += 1;\n          divideToBucked -= 12.5;\n        }\n        if (divideToBucked < 12.5 && divideToBucked > 0) {\n          getBuckets[\"0,5 L\"] += 1;\n          divideToBucked -= 2.5;\n        }\n        console.log(divideToBucked, getBuckets);\n      }\n      setBucketsCount(getBuckets);\n    }\n  }, [finalTotal]);\n\n  const verifyWorD = (WindOrDoor, currWHeight, currWLength, currWindowId, currDoorId) => {\n    const currUseId = WindOrDoor === 'window' ? currWindowId : currDoorId;\n    const currInput = document.getElementById(currUseId);\n    const totalWallArea = wallsAreas[currWHeight] * wallsAreas[currWLength];\n    const currOpositeTotalArea = wallsAreas[`${currUseId}-total-area`] || 0;\n    const totalPlacefulArea = (totalWallArea * 0.5) - currOpositeTotalArea;\n    const totalCurrArea = WindOrDoor === 'window' ? 2.4 /* 1.2 (A) x 2 (L) */ : 1.5; // 1.9 (A) x 0.8 (L)\n    const initCalc = WindOrDoor === 'window' ? [1.2, 2] : [2.2, 1.6];\n    if (wallsAreas[currWHeight] >= initCalc[0] && wallsAreas[currWLength] >= initCalc[1]) {\n      if (totalPlacefulArea >= totalCurrArea) {\n        blockField(false, currUseId);\n        let countWindows = 0;\n        let areaDivision = totalPlacefulArea;\n        for (let i = 0; (areaDivision / totalCurrArea) >= 1; i++) {\n          countWindows += 1;\n          areaDivision -= totalCurrArea;\n        }\n        currInput.placeholder = `max ${countWindows}`;\n        currInput.max = countWindows;\n      } else {\n        blockField(true, currUseId);\n      }\n    } else {\n      blockField(true, currUseId);\n    }\n  };\n\n  const blockField = (block, fieldId) => {\n    const currField = document.getElementById(fieldId);\n    if (block) {\n      currField.disabled = true;\n      currField.placeholder = 'Block';\n      currField.value = '';\n    } else {\n      currField.disabled = false;\n      currField.placeholder = '';\n    }\n  };\n  const handleWallChange = ({ target: { id, value } }) => {\n    const spanEl = document.getElementById(`${id}-span`);\n    const [wall, number, _heigthOrLenght] = id.split('-');\n    const wallLengthId = [wall, number, lengthStr].join('-');\n    const wallHeightId = [wall, number, heightStr].join('-');\n    const currWindowId = [wall, number, windowStr].join('-');\n    const currDoorId = [wall, number, doorStr].join('-');\n    if (Number(value) >= 1 && Number(value) <= 15) {\n      setWallsAreas(previous => ({ ...previous, [id]: Number(value) }));\n      verifyWorD('window', wallHeightId, wallLengthId, currWindowId, currDoorId);\n      verifyWorD('door', wallHeightId, wallLengthId, currWindowId, currDoorId);\n      spanEl.innerText = '';\n    } else {\n      setWallsAreas(previous => ({ ...previous, [id]: '' }));\n      verifyWorD('window', wallHeightId, wallLengthId, currWindowId, currDoorId);\n      verifyWorD('door', wallHeightId, wallLengthId, currWindowId, currDoorId);\n      spanEl.innerText = value === '' ? 'Preencha este campo' : 'Valor incorreto ❌';\n    }\n  };\n  const handleWindowChange = ({ target: { id, value } }) => {\n    const windowTotalArea = 2.4; // 1.2 (A) * 2 (L);\n    setWallsAreas({ ...wallsAreas, [`${id}-total-area`]: Number(value * windowTotalArea) });\n  };\n\n  const handleDoorChange = ({ target: { id, value } }) => {\n    const doorTotalArea = 1.52; // 1.9 (A) * 0.8 (L);\n    setWallsAreas(previous => ({ ...previous, [`${id}-total-area`]: Number((value * doorTotalArea).toFixed(2)) }));\n  };\n\n  const calculateBucketsNDisplay = () => {\n    const displayBuckets = Object.entries(bucketsCount).map(([key, value], index) =>\n      <li key={ index }\n        style={ {\n          backgroundColor: 'white',\n          borderRadius: '40px',\n          color: '#001858',\n          fontWeight: '500',\n          listStyle: 'none',\n          margin: '0.5em',\n        } }\n      >Balde { key } : { value }</li>\n    );\n    return (\n      <>\n        <h3 style={ { margin: '0.5em auto' } }> Área total das { quantityOfWalls } paredes: { finalTotal }m²</h3>\n        <h4 style={ { margin: '0.5em auto' } }>Necessário:</h4>\n        { displayBuckets }\n      </>\n    );\n  };\n\n  const handleSubmit = () => {\n    setShowCalc(true);\n    let theFinalTotal = 0;\n    for (let key in totalAreas) {\n      theFinalTotal += totalAreas[key];\n    }\n    setFinalTotal(theFinalTotal.toFixed(2));\n    setTimeout(() => {\n      const resultTitle = document.getElementById('title-Results');\n      resultTitle.scrollIntoView({ behavior: 'smooth' });\n    }, 100);\n  };\n\n  const handleRedo = () => {\n    setShowCalc(false);\n    setBucketsCount({ \"18 L\": 0, \"3,6 L\": 0, \"2,5 L\": 0, \"0,5 L\": 0 });\n    setFinalTotal(0);\n    setTotalAreas({});\n    setWallsAreas({});\n    for (let i = 1; i <= quantityOfWalls; i++) {\n      document.getElementById(`wall-${i}-height`).value = '';\n      document.getElementById(`wall-${i}-length`).value = '';\n      document.getElementById(`wall-${i}-window`).value = '';\n      document.getElementById(`wall-${i}-door`).value = '';\n      blockField(true, `wall-${i}-window`);\n      blockField(true, `wall-${i}-door`);\n    }\n    const firstInput = document.getElementById('wall-1-height');\n    firstInput.focus();\n  };\n\n  const handleFuncObjs = { handleWallChange, handleWindowChange, handleDoorChange };\n  return (\n    <>\n      <section className={ classes.mainWrapper }>\n        <ImgGenerator imgObj={ imgWindowObj } />\n        <ImgGenerator imgObj={ imgDoorObj } />\n        <WallsInputGenerator\n          wallCardsAmount={ quantityOfWalls }\n          wallMeasures={ wallMeasures }\n          handleFuncObjs={ handleFuncObjs } />\n        <div>\n          <button type='button'\n            className={ classes.button }\n            onClick={ handleSubmit }>CALCULAR</button>\n        </div>\n      </section >\n      { !showCalc ? '' :\n        <div className={ classes.resultWrapper }>\n          <h1 id='title-Results'>Resultados</h1>\n          <ul style={ { padding: '0', margin: '0 auto' } }>\n            { calculateBucketsNDisplay() }\n          </ul>\n          <button type='button'\n            className={ classes.redoButton }\n            onClick={ handleRedo }>Refazer?</button>\n        </div> }\n    </>);\n};\n\nexport default WallsCalc;","import { orange } from '@material-ui/core/colors';\nimport { createTheme } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#f3d2c1'\n    },\n    secondary: {\n      main: '#8bd3dd'\n    },\n    error: {\n      main: orange[500]\n    },\n    text: {\n      primary: '#001858',\n      secondary: '#172c66',\n    },\n    background: {\n      default: '#f3d2c1',\n      paper: '#fef6e4'\n    },\n  },\n  custom: {\n    myOwnComponent: {\n      margin: \"10px 10px\",\n      backgroundColor: \"lightgreen\"\n    },\n    typography: {\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n    },\n  }\n});\n\nexport default theme;","import WallsCalc from \"../components/WallsCalc\";\nimport theme from \"../styles/themeStyles\";\n\nconst LandingPage = () => {\n  const giantString = `Nenhuma parede pode ter menos de 1 metro nem mais de 15 metros, mas podem possuir alturas e larguras diferentes;\n   O total de área das portas e janelas deve ser no máximo 50 % da área de parede;\n  A altura de paredes com porta deve ser, no mínimo, 30 centímetros maior que a altura da porta;\n   Cada janela possui as medidas: 2, 00 x 1, 20 mtos;\n   Cada porta possui as medidas: 0, 80 x 1, 90;\n   Cada litro de tinta é capaz de pintar 5 metros quadrados;\n   Não considerar teto nem piso.;\n   As variações de tamanho das latas de tinta são:\n  -> 0, 5 L,\n  -> 2, 5 L,\n  -> 3, 6 L,\n  -> 18 L `.split(';').map((item, index) => <li key={ index }\n    style={ { color: theme.palette.text.primary, textAlign: 'center', padding: '0.2em 1em 0 0' } }>{ item }</li>);\n  const wallMeasures = { minWallMeasures: 1, maxWallMeasures: 15 };\n  return (\n    <div>\n      <h1 style={ {\n        color: theme.palette.text.primary, textAlign: 'center'\n      } }>Regras de negócio</h1>\n      <summary>\n        <div style={ { width: '80%', textAlign: 'start', margin: '0 auto' } }>\n          <ul style={ { display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0 1em' } }>{ giantString }</ul>\n        </div>\n      </summary>\n      <WallsCalc\n        quantityOfWalls={ 4 }\n        wallMeasures={ wallMeasures }\n      />\n    </div>);\n};\n\nexport default LandingPage;","import { Route, Switch } from 'react-router-dom';\nimport LandingPage from '../pages/LandingPage';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path='/desafio-DIGITAL-REPUBLIC' component={ LandingPage }></Route>\n    </Switch>\n  );\n};\n\nexport default Routes;","import { ThemeProvider } from '@material-ui/core';\nimport AppInside from './components/AppInside';\nimport Routes from './Routes/Routes';\nimport theme from './styles/themeStyles';\n// const Routes = lazy(() => import('./Routes/Routes'));\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={ theme }>\n      <div style={\n        {\n          background: theme.palette.background.default,\n          height: '100%',\n          width: '100%'\n        }\n      }>\n        <AppInside />\n        <Routes />\n      </div>\n    </ThemeProvider >\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}