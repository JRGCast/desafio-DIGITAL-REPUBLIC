{"version":3,"sources":["styles/WallsInputStyles.js","components/WallsInputs.js","pages/LandingPage.js","Routes/Routes.js","styles/themeStyles.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","mainWrapper","alignItems","background","palette","primary","light","border","display","flexFlow","gap","gridTemplateColumns","justifyContent","margin","padding","width","contentWrapper","paper","color","text","WallsInputs","quantityOfWalls","amountOfWalls","Array","fill","inputPropsWalls","inputProps","min","max","step","inputPropsWnD","classes","theInputs","map","_wallAmount","index","className","InputLabel","htmlFor","TextField","id","type","InputProps","autoFocus","required","LandingPage","giantString","split","item","style","textAlign","Routes","exact","path","component","createTheme","main","secondary","error","orange","default","custom","myOwnComponent","backgroundColor","typography","fontFamily","join","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oRAEMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,WAAY,SACZC,WAAYH,EAAMI,QAAQC,QAAQC,MAClCC,OAAO,oBACPC,QAAS,OACTC,SAAU,WACVC,IAAK,MACLC,oBAAqB,UACrBC,eAAgB,uBAChBC,OAAQ,SACRC,QAAS,MACTC,MAAO,OAETC,eAAgB,CACdb,WAAYH,EAAMI,QAAQD,WAAWc,MACrCV,OAAQ,oBACRW,MAAOlB,EAAMI,QAAQe,KAAKd,QAC1BG,QAAS,OACTC,SAAU,cACVG,eAAgB,gBAChBC,OAAQ,SACRC,QAAS,QACTC,MAAO,mBAIIjB,I,OCgCAsB,EAzDK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACfC,EAAgBC,MAAMF,GAAiBG,KAAK,MAG5CC,EAAkB,CACtBC,WAAY,CACVC,IAJoB,EAKpBC,IAJoB,GAKpBC,KAAM,MAGJC,EAAgB,CAAEH,IAAK,GACvBI,EAAUjC,IACVkC,EAAYV,EAAcW,KAAI,SAACC,EAAaC,GAChD,OACE,sBAAwCC,UAAYL,EAAQf,eAA5D,UACE,qBAAKoB,UAAU,yCAAf,SACE,eAACC,EAAA,EAAD,CAAYC,QAAO,sBAAkBH,EAAQ,GAA7C,2BAAmEA,EAAQ,EACzE,cAACI,EAAA,EAAD,CAAWC,GAAE,sBAAkBL,EAAQ,GACrCM,KAAK,SACLC,WAAajB,EACbkB,WAAY,EACZC,UAAQ,IALZ,eAQF,qBAAKR,UAAU,yCAAf,SACE,eAACC,EAAA,EAAD,CAAYC,QAAO,sBAAkBH,EAAQ,GAA7C,gCAAwEA,EAAQ,EAC9E,cAACI,EAAA,EAAD,CAAWC,GAAE,sBAAkBL,EAAQ,GACrCM,KAAK,SACLC,WAAajB,EACbmB,UAAQ,IAJZ,eAOF,qBAAKR,UAAU,yCAAf,SACE,eAACC,EAAA,EAAD,CAAYC,QAAO,eAAWH,EAAQ,EAAnB,eAAnB,0DACE,cAACI,EAAA,EAAD,CAAWC,GAAE,eAAWL,EAAQ,EAAnB,eACXM,KAAK,SACLC,WAAaZ,SAInB,qBAAKM,UAAU,uCAAf,SACE,eAACC,EAAA,EAAD,CAAYC,QAAO,eAAWH,EAAQ,EAAnB,aAAnB,yDACE,cAACI,EAAA,EAAD,CAAWC,GAAE,eAAWL,EAAQ,EAAnB,aACXM,KAAK,SACLC,WAAaZ,WA9BrB,0BAA8BK,OAoClC,OACE,yBAASC,UAAYL,EAAQ9B,YAA7B,SACI+B,KChCOa,EAvBK,WAClB,IAAMC,EAAc,mnBAWXC,MAAM,KAAKd,KAAI,SAACe,EAAMb,GAAP,OAAiB,oBAAkBc,MAAQ,CAAEnC,QAAS,QAArC,SAAkDkC,GAAxCb,MACnD,OACE,gCACE,sDACA,cAAC,EAAD,CAAad,gBAAkB,IAC/B,qBAAK4B,MAAQ,CAAElC,MAAO,QAASmC,UAAW,QAASrC,OAAQ,UAA3D,SACE,6BAAMiC,UCTCK,EARA,WACb,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,4BAA4BC,UAAYT,O,gBCwCjD7C,EA3CDuD,YAAY,CACxBnD,QAAS,CACPC,QAAS,CACPmD,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAMG,IAAO,MAEfxC,KAAM,CACJd,QAAS,UACToD,UAAW,WAEbtD,WAAY,CACVyD,QAAS,UACT3C,MAAO,YAGX4C,OAAQ,CACNC,eAAgB,CACdjD,OAAQ,YACRkD,gBAAiB,cAEnBC,WAAY,CAEVC,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,SCvBEC,EAbH,WACV,OACE,cAACC,EAAA,EAAD,CAAepE,MAAQA,EAAvB,SACE,sBAAKiD,MAAQ,CAAEc,gBAAiB/D,EAAMI,QAAQD,WAAWyD,SAAzD,UACE,oJACA,iOACA,qJACA,cAAC,EAAD,UCAOS,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dbe1d57e.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  mainWrapper: {\n    alignItems: 'center',\n    background: theme.palette.primary.light,\n    border: `5px solid #001858`,\n    display: 'grid',\n    flexFlow: 'row wrap',\n    gap: '1em',\n    gridTemplateColumns: '1fr 1fr',\n    justifyContent: 'center space-between',\n    margin: '0 auto',\n    padding: '1em',\n    width: '50%',\n  },\n  contentWrapper: {\n    background: theme.palette.background.paper,\n    border: '1px solid #001858',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'space-between',\n    margin: '0 auto',\n    padding: '0.5em',\n    width: 'min-content',\n  }\n}));\n\nexport default useStyles;","import { InputLabel, TextField } from '@material-ui/core';\nimport './WallsInputs.css';\nimport useStyles from '../styles/WallsInputStyles';\n\nconst WallsInputs = ({ quantityOfWalls }) => {\n  const amountOfWalls = Array(quantityOfWalls).fill(null);\n  const minWallMeasures = 1;\n  const maxWallMeasures = 15;\n  const inputPropsWalls = {\n    inputProps: {\n      min: minWallMeasures,\n      max: maxWallMeasures,\n      step: 0.01\n    }\n  };\n  const inputPropsWnD = { min: 0 };\n  const classes = useStyles();\n  const theInputs = amountOfWalls.map((_wallAmount, index) => {\n    return (\n      <div key={ `content-wrapper-${index}` } className={ classes.contentWrapper }>\n        <div className='WallsInputs-wrapper WallsInputs-height'>\n          <InputLabel htmlFor={ `wall-height-${index + 1}` }>Altura Parede { index + 1 }\n            <TextField id={ `wall-height-${index + 1}` }\n              type='number'\n              InputProps={ inputPropsWalls }\n              autoFocus={ true }\n              required /> metros\n          </InputLabel>\n        </div>\n        <div className='WallsInputs-wrapper WallsInputs-lenght'>\n          <InputLabel htmlFor={ `wall-length-${index + 1}` }>Comprimento Parede { index + 1 }\n            <TextField id={ `wall-length-${index + 1}` }\n              type='number'\n              InputProps={ inputPropsWalls }\n              required /> metros\n          </InputLabel>\n        </div>\n        <div className='WallsInputs-wrapper WallsInputs-window'>\n          <InputLabel htmlFor={ `wall-${index + 1}-has-window` }>Possui janela (medidas 2,00m (L) x 1,20m (A))\n            <TextField id={ `wall-${index + 1}-has-window` }\n              type='number'\n              InputProps={ inputPropsWnD }\n            />\n          </InputLabel>\n        </div>\n        <div className='WallsInputs-wrapper WallsInputs-door'>\n          <InputLabel htmlFor={ `wall-${index + 1}-has-door` }>Possui porta (medidas 0,80m (L) x 1,90m (A))\n            <TextField id={ `wall-${index + 1}-has-door` }\n              type='number'\n              InputProps={ inputPropsWnD } />\n          </InputLabel>\n        </div>\n      </div>\n    );\n  });\n  return (\n    <section className={ classes.mainWrapper }>\n      { theInputs }\n    </section>);\n};\n\nexport default WallsInputs;","import WallsInputs from \"../components/WallsInputs\";\n\nconst LandingPage = () => {\n  const giantString = `Nenhuma parede pode ter menos de 1 metro nem mais de 15 metros, mas podem possuir alturas e larguras diferentes;\n   O total de área das portas e janelas deve ser no máximo 50 % da área de parede;\n  A altura de paredes com porta deve ser, no mínimo, 30 centímetros maior que a altura da porta;\n   Cada janela possui as medidas: 2, 00 x 1, 20 mtos;\n   Cada porta possui as medidas: 0, 80 x 1, 90;\n   Cada litro de tinta é capaz de pintar 5 metros quadrados;\n   Não considerar teto nem piso.;\n   As variações de tamanho das latas de tinta são:\n  - 0, 5 L\n  - 2, 5 L\n  - 3, 6 L\n  - 18 L `.split(';').map((item, index) => <li key={ index } style={ { padding: '10px' } }>{ item }</li>);\n  return (\n    <div>\n      <h1>Regras de negócio</h1>\n      <WallsInputs quantityOfWalls={ 4 } />\n      <div style={ { width: '500px', textAlign: 'start', margin: '0 auto' } }>\n        <ol>{ giantString }</ol>\n      </div>\n    </div>);\n};\n\nexport default LandingPage;","import { Route, Switch } from 'react-router-dom';\nimport LandingPage from '../pages/LandingPage';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path='/desafio-DIGITAL-REPUBLIC' component={ LandingPage }></Route>\n    </Switch>\n  );\n};\n\nexport default Routes;","import { orange } from '@material-ui/core/colors';\nimport { createTheme } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#f3d2c1'\n    },\n    secondary: {\n      main: '#8bd3dd'\n    },\n    error: {\n      main: orange[500]\n    },\n    text: {\n      primary: '#001858',\n      secondary: '#172c66',\n    },\n    background: {\n      default: '#f3d2c1',\n      paper: '#fef6e4'\n    },\n  },\n  custom: {\n    myOwnComponent: {\n      margin: \"10px 10px\",\n      backgroundColor: \"lightgreen\"\n    },\n    typography: {\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n    },\n  }\n});\n\nexport default theme;","import { ThemeProvider } from '@material-ui/core';\nimport './App.css';\nimport Routes from './Routes/Routes';\nimport theme from './styles/themeStyles';\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={ theme }>\n      <div style={ { backgroundColor: theme.palette.background.default } }>\n        <p>Uma aplicação web que ajude o usuário a calcular a quantidade de tinta necessária para pintar uma sala.</p>\n        <p>Essa aplicação deve considerar que a sala é composta de 4 paredes e deve permitir que o usuário escolha qual a medida de cada parede e quantas janelas e portas possuem cada parede.</p>\n        <p>Com base na quantidade necessária o sistema deve apontar tamanhos de lata de tinta que o usuário deve comprar.</p>\n        <Routes />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}