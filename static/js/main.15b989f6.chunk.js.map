{"version":3,"sources":["styles/WallsInputStyles.js","components/ImgGenerator.js","components/WallsInputsGenerator.js","components/WallsCalc.js","pages/LandingPage.js","Routes/Routes.js","styles/themeStyles.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","mainWrapper","alignItems","background","palette","primary","light","border","display","flexFlow","gap","gridTemplateColumns","justifyContent","margin","padding","width","allContentWrapper","paper","color","text","cardWrapper","alignContent","inputMeasures","marginLeft","imageWrapper","button","backgroundColor","borderRadius","fontSize","position","left","height","ImgGenerator","imgObj","src","alt","textInfo","classes","className","style","WallsInputGenerator","wallCardsAmount","wallMeasures","handleFuncObjs","minWallMeasures","maxWallMeasures","handleWallChange","handleWindowChange","handleDoorChange","inputPropsWalls","inputProps","min","max","step","inputPropsWnD","theInputs","Array","fill","map","_amount","index","InputLabel","htmlFor","TextField","id","type","placeholder","InputProps","autoFocus","onChange","onKeyPress","required","WallsCalc","quantityOfWalls","useState","wallsAreas","setWallsAreas","totalAreas","setTotalAreas","showCalc","setShowCalc","finalTotal","setFinalTotal","heightStr","lengthStr","windowStr","doorStr","useEffect","setTheTotalArea","wallNumber","theWallH","theWallL","totalWallArea","previous","i","verifyIfWindow","currWHeight","currWLength","currWindowId","currDoorId","currWindowInput","document","getElementById","totalPlacefulArea","countWindows","areaDivision","value","blockWindow","block","fieldId","currWInput","disabled","target","spanEl","split","wall","number","wallLengthId","join","wallHeightId","Number","innerText","toFixed","onClick","key","LandingPage","giantString","item","textAlign","Routes","exact","path","component","createTheme","main","secondary","error","orange","default","custom","myOwnComponent","typography","fontFamily","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.15b989f6.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  mainWrapper: {\n    alignItems: 'center',\n    background: theme.palette.primary.light,\n    border: `5px solid #001858`,\n    display: 'grid',\n    flexFlow: 'row wrap',\n    gap: '1em',\n    gridTemplateColumns: '1fr 1fr',\n    justifyContent: 'center space-between',\n    margin: '0 auto',\n    padding: '1em',\n    width: '50%',\n  },\n  allContentWrapper: {\n    background: theme.palette.background.paper,\n    border: '3px solid #001858',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'space-between',\n    margin: '0 auto',\n    padding: '0.5em',\n    width: '90%',\n  },\n  cardWrapper: {\n    alignItems: 'center',\n    alignContent: 'center',\n    border: '1px solid #001858',\n    padding: '0.3em',\n    margin: '0.5em auto',\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'center',\n  },\n  inputMeasures: {\n    marginLeft: '0.2em',\n    width: '4em'\n  },\n  imageWrapper: {\n    alignContent: 'center',\n    alignItems: 'center',\n    background: theme.palette.background.paper,\n    border: '3px solid #001858',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexFlow: 'column wrap',\n    justifyContent: 'center',\n    margin: '0 auto',\n    padding: '0.5em',\n    width: '90%',\n  },\n  button: {\n    backgroundColor: '#001858',\n    borderRadius: '40px',\n    color: 'white',\n    fontSize: '1.5em',\n    position: 'relative',\n    left: '50%',\n    width: '100%',\n    height: '5vh',\n  }\n}));\n\nexport default useStyles;","import useStyles from '../styles/WallsInputStyles';\nconst ImgGenerator = ({ imgObj }) => {\n  const { src, alt, textInfo } = imgObj;\n  const classes = useStyles();\n  return (\n    <>\n      <div className={ classes.imageWrapper }>\n        <figure>\n          <img\n            src={ src }\n            alt={ alt }\n            style={ {\n              background: 'white',\n              border: '2px solid grey',\n              padding: '0.5em',\n              width: '10em'\n            } } />\n        </figure>\n        <p>{ textInfo }</p>\n      </div>\n      {/*<div className={ classes.imageWrapper }>\n        <figure>\n          <img\n            src='https://mobileimages.lowes.com/productimages/b0196113-822f-4b05-ab2c-4b43b30e56ef/04744195.jpg?size=pdhi'\n            alt='porta'\n            style={ {\n              background: 'white',\n              border: '2px solid grey',\n              padding: '0.5em',\n              width: '10em'\n            } } />\n        </figure>\n        <p >Medida da Porta: 0,80m (L) x 1,90m (A)</p>\n      </div> */}\n    </>);\n};\n\nexport default ImgGenerator;","import { InputLabel, TextField } from \"@material-ui/core\";\nimport useStyles from '../styles/WallsInputStyles';\n\nconst WallsInputGenerator = ({ wallCardsAmount, wallMeasures, handleFuncObjs }) => {\n  const classes = useStyles();\n  const { minWallMeasures, maxWallMeasures } = wallMeasures;\n  const { handleWallChange, handleWindowChange, handleDoorChange, } = handleFuncObjs;\n  const { allContentWrapper, cardWrapper, inputMeasures } = classes;\n  const inputPropsWalls = {\n    inputProps: {\n      min: minWallMeasures,\n      max: maxWallMeasures,\n      step: 0.01,\n    }\n  };\n  const inputPropsWnD = { inputProps: { min: 0, max: 0 } };\n  const theInputs = Array(wallCardsAmount).fill('').map((_amount, index) => {\n    return (\n      <div key={ `all-content-wrapper-${index}` } className={ allContentWrapper }>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-height` }>Altura Parede { index + 1 } :</InputLabel>\n          <TextField id={ `wall-${index + 1}-height` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='1-15'\n            InputProps={ inputPropsWalls }\n            autoFocus={ true }\n            onChange={ handleWallChange }\n            onKeyPress={ handleWallChange }\n            required /> metros\n          <span id={ `wall-${index + 1}-height-span` }></span>\n        </div>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-length` }>Comprimento Parede { index + 1 } :</InputLabel>\n          <TextField id={ `wall-${index + 1}-length` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='1-15'\n            InputProps={ inputPropsWalls }\n            onChange={ handleWallChange }\n            required /> metros\n          <span id={ `wall-${index + 1}-length-span` }></span>\n        </div>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-window` }>Possui :</InputLabel>\n          <TextField id={ `wall-${index + 1}-window` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='Block'\n            InputProps={ inputPropsWnD }\n            onChange={ handleWindowChange }\n          /> janela(s)\n        </div>\n        <div className={ cardWrapper }>\n          <InputLabel htmlFor={ `wall-${index + 1}-door` }>Possui :</InputLabel>\n          <TextField id={ `wall-${index + 1}-door` }\n            className={ inputMeasures }\n            type='number'\n            placeholder='Block'\n            InputProps={ inputPropsWnD }\n            onChange={ handleDoorChange }\n          /> porta(s)\n        </div>\n      </div >\n    );\n  });\n  return (<>{ theInputs }</>);\n};\n\nexport default WallsInputGenerator;","import { useEffect, useState } from 'react';\nimport useStyles from '../styles/WallsInputStyles';\nimport ImgGenerator from './ImgGenerator';\nimport WallsInputGenerator from './WallsInputsGenerator';\n\nconst WallsCalc = ({ quantityOfWalls, wallMeasures }) => {\n  const [wallsAreas, setWallsAreas] = useState({});\n  const [totalAreas, setTotalAreas] = useState({});\n  const [showCalc, setShowCalc] = useState(false);\n  const [finalTotal, setFinalTotal] = useState(0);\n  const heightStr = 'height';\n  const lengthStr = 'length';\n  const windowStr = 'window';\n  const doorStr = 'door';\n  const imgWindowObj = {\n    src: 'https://amgestoroutput.s3.amazonaws.com/jcmateriais/img_produtos/638265-14535830_thumb.png',\n    alt: 'imagem-janela',\n    textInfo: 'Medida da Janela: 2,00m (L) x 1,20m (A)'\n  };\n  const imgDoorObj = {\n    src: 'https://mobileimages.lowes.com/productimages/b0196113-822f-4b05-ab2c-4b43b30e56ef/04744195.jpg?size=pdhi',\n    alt: 'imagem-porta',\n    textInfo: 'Medida da Porta: 0,80m (L) x 1,90m (A)'\n  };\n\n  useEffect(() => {\n    const setTheTotalArea = (wallNumber) => {\n      const theWallH = wallsAreas[`wall-${wallNumber}-${heightStr}`];\n      const theWallL = wallsAreas[`wall-${wallNumber}-${lengthStr}`];\n      if (theWallH && theWallL) {\n        const totalWallArea = theWallH * theWallL;\n        setTotalAreas(previous => ({ ...previous, [`wall-${wallNumber}-total-area`]: totalWallArea }));\n      }\n    };\n    for (let i = 1; i <= quantityOfWalls; i++) {\n      setTheTotalArea(i);\n    }\n  }, [wallsAreas, quantityOfWalls]);\n\n  const verifyIfWindow = (currWHeight, currWLength, currWindowId, currDoorId) => {\n    const currWindowInput = document.getElementById(currWindowId);\n    const totalWallArea = wallsAreas[currWHeight] * wallsAreas[currWLength];\n    const currDoorTotalArea = wallsAreas[`${currDoorId}-total-area`] || 0;\n    const totalPlacefulArea = (totalWallArea * 0.5) - currDoorTotalArea;\n    const totalWindowArea = 2.4; // 1.2 (A) x 2 (L)\n    if (wallsAreas[currWHeight] >= 1.2 && wallsAreas[currWLength] >= 2) {\n      if (totalPlacefulArea >= totalWindowArea) {\n        let countWindows = 0;\n        let areaDivision = totalPlacefulArea;\n        for (let i = 0; (areaDivision / totalWindowArea) >= 1; i++) {\n          countWindows += 1;\n          areaDivision -= totalWindowArea;\n        }\n        currWindowInput.placeholder = countWindows;\n        currWindowInput.max = countWindows;\n      } else {\n        currWindowInput.value = '';\n        currWindowInput.max = 0;\n      }\n    }\n  };\n  const blockWindow = (block, fieldId) => {\n    const currWInput = document.getElementById(fieldId);\n    if (block) {\n      currWInput.disabled = true;\n      currWInput.placeholder = 'Block';\n      currWInput.value = '';\n    } else {\n      currWInput.disabled = false;\n      currWInput.placeholder = '';\n    }\n  };\n  const handleWallChange = ({ target: { id, value } }) => {\n    const spanEl = document.getElementById(`${id}-span`);\n    const [wall, number, _heigthOrLenght] = id.split('-');\n    const wallLengthId = [wall, number, lengthStr].join('-');\n    const wallHeightId = [wall, number, heightStr].join('-');\n    const currWindowId = [wall, number, windowStr].join('-');\n    const currDoorId = [wall, number, doorStr].join('-');\n    if (Number(value) >= 1 && Number(value) <= 15) {\n      setWallsAreas(previous => ({ ...previous, [id]: Number(value) }));\n      blockWindow(false, currWindowId);\n      verifyIfWindow(wallHeightId, wallLengthId, currWindowId, currDoorId);\n      spanEl.innerText = '';\n    } else {\n      setWallsAreas(previous => ({ ...previous, [id]: '' }));\n      blockWindow(true, currWindowId);\n      verifyIfWindow(wallHeightId, wallLengthId, currWindowId, currDoorId);\n      spanEl.innerText = value === '' ? 'Preencha este campo' : 'Valor incorreto ❌';\n    }\n  };\n  const handleWindowChange = ({ target: { id, value } }) => {\n    const windowTotalArea = 2.4; // 1.2 (A) * 2 (L);\n    setWallsAreas({ ...wallsAreas, [`${id}-total-area`]: Number(value * windowTotalArea) });\n  };\n\n  const handleDoorChange = ({ target: { id, value } }) => {\n    const doorTotalArea = 1.52; // 1.9 (A) * 0.8 (L);\n    setWallsAreas(previous => ({ ...previous, [`${id}-total-area`]: Number((value * doorTotalArea).toFixed(2)) }));\n  };\n\n  const handleSubmit = () => {\n    setShowCalc(true);\n    let finalTotal = 0;\n    for (let key in totalAreas) {\n      finalTotal += totalAreas[key];\n    }\n    setFinalTotal(finalTotal.toFixed(2));\n  };\n\n  const classes = useStyles();\n  const handleFuncObjs = { handleWallChange, handleWindowChange, handleDoorChange };\n  return (<>\n    <section className={ classes.mainWrapper }>\n      <ImgGenerator imgObj={ imgWindowObj } />\n      <ImgGenerator imgObj={ imgDoorObj } />\n      <WallsInputGenerator\n        wallCardsAmount={ quantityOfWalls }\n        wallMeasures={ wallMeasures }\n        handleFuncObjs={ handleFuncObjs } />\n      <div>\n        <button type='button'\n          className={ classes.button }\n          onClick={ handleSubmit }>CALCULAR</button>\n      </div>\n    </section >\n    { !showCalc ? '' :\n      <div className={ classes.mainWrapper }>\n        <h3> Área total das { quantityOfWalls } paredes: { finalTotal }m²</h3>\n        <button type='button' onClick={ () => setShowCalc(false) }>Voltar</button>\n      </div> }\n  </>);\n};\n\nexport default WallsCalc;","import WallsCalc from \"../components/WallsCalc\";\n\nconst LandingPage = () => {\n  const giantString = `Nenhuma parede pode ter menos de 1 metro nem mais de 15 metros, mas podem possuir alturas e larguras diferentes;\n   O total de área das portas e janelas deve ser no máximo 50 % da área de parede;\n  A altura de paredes com porta deve ser, no mínimo, 30 centímetros maior que a altura da porta;\n   Cada janela possui as medidas: 2, 00 x 1, 20 mtos;\n   Cada porta possui as medidas: 0, 80 x 1, 90;\n   Cada litro de tinta é capaz de pintar 5 metros quadrados;\n   Não considerar teto nem piso.;\n   As variações de tamanho das latas de tinta são:\n  - 0, 5 L\n  - 2, 5 L\n  - 3, 6 L\n  - 18 L `.split(';').map((item, index) => <li key={ index } style={ { padding: '10px' } }>{ item }</li>);\n  const wallMeasures = { minWallMeasures: 1, maxWallMeasures: 15 };\n  return (\n    <div>\n      <h1>Regras de negócio</h1>\n      <WallsCalc\n        quantityOfWalls={ 4 }\n        wallMeasures={ wallMeasures }\n      />\n      <div style={ { width: '500px', textAlign: 'start', margin: '0 auto' } }>\n        <ol>{ giantString }</ol>\n      </div>\n    </div>);\n};\n\nexport default LandingPage;","import { Route, Switch } from 'react-router-dom';\nimport LandingPage from '../pages/LandingPage';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path='/desafio-DIGITAL-REPUBLIC' component={ LandingPage }></Route>\n    </Switch>\n  );\n};\n\nexport default Routes;","import { orange } from '@material-ui/core/colors';\nimport { createTheme } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#f3d2c1'\n    },\n    secondary: {\n      main: '#8bd3dd'\n    },\n    error: {\n      main: orange[500]\n    },\n    text: {\n      primary: '#001858',\n      secondary: '#172c66',\n    },\n    background: {\n      default: '#f3d2c1',\n      paper: '#fef6e4'\n    },\n  },\n  custom: {\n    myOwnComponent: {\n      margin: \"10px 10px\",\n      backgroundColor: \"lightgreen\"\n    },\n    typography: {\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n    },\n  }\n});\n\nexport default theme;","import { ThemeProvider } from '@material-ui/core';\nimport './App.css';\nimport Routes from './Routes/Routes';\nimport theme from './styles/themeStyles';\n// const Routes = lazy(() => import('./Routes/Routes'));\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={ theme }>\n      <div style={ { backgroundColor: theme.palette.background.default } }>\n        <h1 style={ { margin: '0 auto', padding: '1em' } }>Uma aplicação web que ajude o usuário a calcular a quantidade de tinta necessária para pintar uma sala.</h1>\n        <p>Essa aplicação deve considerar que a sala é composta de 4 paredes e deve permitir que o usuário escolha qual a medida de cada parede e quantas janelas e portas possuem cada parede.</p>\n        <p>Com base na quantidade necessária o sistema deve apontar tamanhos de lata de tinta que o usuário deve comprar.</p>\n        <Routes />\n      </div>\n    </ThemeProvider >\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}